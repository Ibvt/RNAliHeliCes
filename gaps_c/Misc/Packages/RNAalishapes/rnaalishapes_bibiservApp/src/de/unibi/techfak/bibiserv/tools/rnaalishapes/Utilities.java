/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2010 BiBiServ Curator Team, http://bibiserv.cebitec.uni-bielefeld.de,
 * All rights reserved.
 *
 * The contents of this file are subject to the terms of the Common
 * Development and Distribution License("CDDL") (the "License"). You
 * may not use this file except in compliance with the License. You can
 * obtain a copy of the License at http://www.sun.com/cddl/cddl.html
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.  When distributing the software, include
 * this License Header Notice in each file.  If applicable, add the following
 * below the License Header, with the fields enclosed by brackets [] replaced
 *  by your own identifying information:
 *
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 */
package de.unibi.techfak.bibiserv.tools.rnaalishapes;

import de.unibi.cebitec.bibiserv.util.validate.*;
import de.unibi.techfak.bibiserv.util.ontoaccess.bibiontotypes.OntoRepresentation;
import de.unibi.techfak.bibiserv.exception.BiBiToolsException;
import de.unibi.cebitec.bibiserv.utils.UniversalValidator;
import de.unibi.cebitec.bibiserv.utils.UniversalConverter;
import de.unibi.cebitec.bibiserv.util.convert.ConversionException;

import de.unibi.techfak.bibiserv.web.beans.session.MessagesInterface;

/**
 * Utilities class - offers validation methods for all input output types used within
 * generated tool.
 * <b>Attention: This is autogenerated code. </b>
 *
 *
 * @author Jan Krueger - jkrueger[aet]cebitec.uni-bielefeld.de (template)
 * @author Thomas Gatter - tgatter[aet]cebitec.uni-bielefeld.de
 */
public class Utilities {
 

   /* generated validator method for all input/output types. Valid if no error */   
     public static Object validate(Object content, OntoRepresentation representation) throws ValidationException, BiBiToolsException{
        return UniversalValidator.validate(content, representation);
     }
     
    /* generate converter method */
      public static Object convert(Object object, OntoRepresentation from, OntoRepresentation to)
            throws BiBiToolsException, ConversionException {
         return UniversalConverter.convert(object, from, to);
     }

   /* generated validator methods for all (enum) parameters */
     public static boolean validate_rnaalishapes_parameter_bppmthreshold(float content) throws ValidationException{
return validate_rnaalishapes_parameter_bppmthreshold(content,null);
}
public static boolean validate_rnaalishapes_parameter_bppmthreshold(float content,MessagesInterface msg) throws ValidationException{
if (content < 0.0) { 
throw new ValidationException((msg == null?"Value must be greater or equal than '0.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.GREATEREQUAL","0.0")));
}
if (content >= 1.0) { 
throw new ValidationException((msg == null?"Value must be lesser than '1.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.LESSER","1.0")));
}
return true;}
public static boolean validate_rnaalishapes_parameter_temperature(float content) throws ValidationException{
return validate_rnaalishapes_parameter_temperature(content,null);
}
public static boolean validate_rnaalishapes_parameter_temperature(float content,MessagesInterface msg) throws ValidationException{
if (content < -273.15) { 
throw new ValidationException((msg == null?"Value must be greater or equal than '-273.15' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.GREATEREQUAL","-273.15")));
}
return true;}
public static boolean validate_rnaalishapes_parameter_nfactor(float content) throws ValidationException{
return validate_rnaalishapes_parameter_nfactor(content,null);
}
public static boolean validate_rnaalishapes_parameter_nfactor(float content,MessagesInterface msg) throws ValidationException{
return true;}
public static boolean validate_rnaalishapes_parameter_decimals_for_probabilities(int content) throws ValidationException{
return validate_rnaalishapes_parameter_decimals_for_probabilities(content,null);
}
public static boolean validate_rnaalishapes_parameter_decimals_for_probabilities(int content,MessagesInterface msg) throws ValidationException{
if (content < 0.0) { 
throw new ValidationException((msg == null?"Value must be greater or equal than '0.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.GREATEREQUAL","0.0")));
}
return true;}
public static boolean validate_rnaalishapes_parameter_window_size(int content) throws ValidationException{
return validate_rnaalishapes_parameter_window_size(content,null);
}
public static boolean validate_rnaalishapes_parameter_window_size(int content,MessagesInterface msg) throws ValidationException{
if (content <= 1.0) { 
throw new ValidationException((msg == null?"Value must be greater than '1.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.GREATER","1.0")));
}
return true;}
public static boolean validate_rnaalishapes_parameter_numsamples(int content) throws ValidationException{
return validate_rnaalishapes_parameter_numsamples(content,null);
}
public static boolean validate_rnaalishapes_parameter_numsamples(int content,MessagesInterface msg) throws ValidationException{
if (content < 1.0) { 
throw new ValidationException((msg == null?"Value must be greater or equal than '1.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.GREATEREQUAL","1.0")));
}
return true;}
public static boolean validate_rnaalishapes_parameter_relative_deviation(float content) throws ValidationException{
return validate_rnaalishapes_parameter_relative_deviation(content,null);
}
public static boolean validate_rnaalishapes_parameter_relative_deviation(float content,MessagesInterface msg) throws ValidationException{
return true;}
public static boolean validate_rnaalishapes_parameter_absolute_deviation(float content) throws ValidationException{
return validate_rnaalishapes_parameter_absolute_deviation(content,null);
}
public static boolean validate_rnaalishapes_parameter_absolute_deviation(float content,MessagesInterface msg) throws ValidationException{
if (content < 0.0) { 
throw new ValidationException((msg == null?"Value must be greater or equal than '0.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.GREATEREQUAL","0.0")));
}
return true;}
public static boolean validate_rnaalishapes_parameter_window_increment(int content) throws ValidationException{
return validate_rnaalishapes_parameter_window_increment(content,null);
}
public static boolean validate_rnaalishapes_parameter_window_increment(int content,MessagesInterface msg) throws ValidationException{
if (content < 1.0) { 
throw new ValidationException((msg == null?"Value must be greater or equal than '1.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.GREATEREQUAL","1.0")));
}
return true;}
public static boolean validate_rnaalishapes_parameter_cfactor(float content) throws ValidationException{
return validate_rnaalishapes_parameter_cfactor(content,null);
}
public static boolean validate_rnaalishapes_parameter_cfactor(float content,MessagesInterface msg) throws ValidationException{
return true;}
public static boolean validate_rnaalishapes_parameter_output_probability_filter(float content) throws ValidationException{
return validate_rnaalishapes_parameter_output_probability_filter(content,null);
}
public static boolean validate_rnaalishapes_parameter_output_probability_filter(float content,MessagesInterface msg) throws ValidationException{
if (content < 0.0) { 
throw new ValidationException((msg == null?"Value must be greater or equal than '0.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.GREATEREQUAL","0.0")));
}
if (content >= 1.0) { 
throw new ValidationException((msg == null?"Value must be lesser than '1.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.LESSER","1.0")));
}
return true;}
public static boolean validate_rnaalishapes_parameter_low_probability_filter(float content) throws ValidationException{
return validate_rnaalishapes_parameter_low_probability_filter(content,null);
}
public static boolean validate_rnaalishapes_parameter_low_probability_filter(float content,MessagesInterface msg) throws ValidationException{
if (content < 0.0) { 
throw new ValidationException((msg == null?"Value must be greater or equal than '0.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.GREATEREQUAL","0.0")));
}
if (content >= 1.0) { 
throw new ValidationException((msg == null?"Value must be lesser than '1.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.LESSER","1.0")));
}
return true;}
public static boolean validate_rnaalishapes_parameter_shape_level(int content) throws ValidationException{
return validate_rnaalishapes_parameter_shape_level(content,null);
}
public static boolean validate_rnaalishapes_parameter_shape_level(int content,MessagesInterface msg) throws ValidationException{
if (content < 1.0) { 
throw new ValidationException((msg == null?"Value must be greater or equal than '1.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.GREATEREQUAL","1.0")));
}
if (content > 5.0) { 
throw new ValidationException((msg == null?"Value must be lesser or equal than '5.0' !":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.LESSEREQUAL","5.0")));
}
return true;}
public static boolean validate_rnaalishapes_parameter_pairing_fraction(int content) throws ValidationException{
return validate_rnaalishapes_parameter_pairing_fraction(content,null);
}
public static boolean validate_rnaalishapes_parameter_pairing_fraction(int content,MessagesInterface msg) throws ValidationException{
return true;}


     public static boolean validate_rnaalishapes_parameter_structureprobs(String content) throws ValidationException{
return validate_rnaalishapes_parameter_structureprobs(content,null);
}
public static boolean validate_rnaalishapes_parameter_structureprobs(String content,MessagesInterface msg) throws ValidationException{
if (content != null && content.equals("0")){return true;}
if (content != null && content.equals("1")){return true;}
throw new ValidationException((msg == null ? "Value must match one of '0' or '1'":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.enum.SELECTONE","'0' or '1'")));
}
public static boolean validate_rnaalishapes_parameter_show_samples(String content) throws ValidationException{
return validate_rnaalishapes_parameter_show_samples(content,null);
}
public static boolean validate_rnaalishapes_parameter_show_samples(String content,MessagesInterface msg) throws ValidationException{
if (content != null && content.equals("0")){return true;}
if (content != null && content.equals("1")){return true;}
throw new ValidationException((msg == null ? "Value must match one of '0' or '1'":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.enum.SELECTONE","'0' or '1'")));
}
public static boolean validate_rnaalishapes_parameter_grammar(String content) throws ValidationException{
return validate_rnaalishapes_parameter_grammar(content,null);
}
public static boolean validate_rnaalishapes_parameter_grammar(String content,MessagesInterface msg) throws ValidationException{
if (content != null && content.equals("nodangle")){return true;}
if (content != null && content.equals("overdangle")){return true;}
if (content != null && content.equals("microstate")){return true;}
if (content != null && content.equals("macrostate")){return true;}
throw new ValidationException((msg == null ? "Value must match one of 'nodangle' or 'overdangle' or 'microstate' or 'macrostate'":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.enum.SELECTONE","'nodangle' or 'overdangle' or 'microstate' or 'macrostate'")));
}
public static boolean validate_rnaalishapes_parameter_structure_conservation_index(String content) throws ValidationException{
return validate_rnaalishapes_parameter_structure_conservation_index(content,null);
}
public static boolean validate_rnaalishapes_parameter_structure_conservation_index(String content,MessagesInterface msg) throws ValidationException{
if (content != null && content.equals("0")){return true;}
if (content != null && content.equals("1")){return true;}
throw new ValidationException((msg == null ? "Value must match one of '0' or '1'":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.enum.SELECTONE","'0' or '1'")));
}
public static boolean validate_rnaalishapes_parameter_thermodynamic_model_parameters(String content) throws ValidationException{
return validate_rnaalishapes_parameter_thermodynamic_model_parameters(content,null);
}
public static boolean validate_rnaalishapes_parameter_thermodynamic_model_parameters(String content,MessagesInterface msg) throws ValidationException{
if (content != null && content.equals("rna_turner2004.par")){return true;}
if (content != null && content.equals("rna_turner1999.par")){return true;}
if (content != null && content.equals("rna_andronescu2007.par")){return true;}
if (content != null && content.equals("dna_mathews2004.par")){return true;}
if (content != null && content.equals("dna_mathews1999.par")){return true;}
throw new ValidationException((msg == null ? "Value must match one of 'rna_turner2004.par' or 'rna_turner1999.par' or 'rna_andronescu2007.par' or 'dna_mathews2004.par' or 'dna_mathews1999.par'":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.enum.SELECTONE","'rna_turner2004.par' or 'rna_turner1999.par' or 'rna_andronescu2007.par' or 'dna_mathews2004.par' or 'dna_mathews1999.par'")));
}
public static boolean validate_rnaalishapes_parameter_lonely_base_pairs(String content) throws ValidationException{
return validate_rnaalishapes_parameter_lonely_base_pairs(content,null);
}
public static boolean validate_rnaalishapes_parameter_lonely_base_pairs(String content,MessagesInterface msg) throws ValidationException{
if (content != null && content.equals("0")){return true;}
if (content != null && content.equals("1")){return true;}
throw new ValidationException((msg == null ? "Value must match one of '0' or '1'":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.enum.SELECTONE","'0' or '1'")));
}
public static boolean validate_rnaalishapes_parameter_consensus(String content) throws ValidationException{
return validate_rnaalishapes_parameter_consensus(content,null);
}
public static boolean validate_rnaalishapes_parameter_consensus(String content,MessagesInterface msg) throws ValidationException{
if (content != null && content.equals("consensus")){return true;}
if (content != null && content.equals("mis")){return true;}
throw new ValidationException((msg == null ? "Value must match one of 'consensus' or 'mis'":msg.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.enum.SELECTONE","'consensus' or 'mis'")));
}


}
