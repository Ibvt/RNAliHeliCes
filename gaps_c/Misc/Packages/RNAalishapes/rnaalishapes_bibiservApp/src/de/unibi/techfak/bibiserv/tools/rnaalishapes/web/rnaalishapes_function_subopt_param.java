/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 * Copyright 2010 BiBiServ Curator Team, http://bibiserv.cebitec.uni-bielefeld.de, 
 * All rights reserved.
 * 
 * The contents of this file are subject to the terms of the Common
 * Development and Distribution License("CDDL") (the "License"). You 
 * may not use this file except in compliance with the License. You can 
 * obtain a copy of the License at http://www.sun.com/cddl/cddl.html
 * 
 * See the License for the specific language governing permissions and 
 * limitations under the License.  When distributing the software, include 
 * this License Header Notice in each file.  If applicable, add the following 
 * below the License Header, with the fields enclosed by brackets [] replaced
 *  by your own identifying information:
 * 
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * Contributor(s):
 * 
 */
package de.unibi.techfak.bibiserv.tools.rnaalishapes.web;

import de.unibi.cebitec.bibiserv.util.validate.ValidationException;
import de.unibi.techfak.bibiserv.cms.Texample.Prop;
import de.unibi.techfak.bibiserv.tools.rnaalishapes.Utilities;
import de.unibi.techfak.bibiserv.util.Pair;
import de.unibi.techfak.bibiserv.web.beans.session.MessagesInterface;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.faces.event.ActionEvent;
import org.apache.log4j.Logger;

/**
 * This is a autogenerated bean input template class for function <i>rnaalishapes_function_subopt_param</i>
 *
 * @author Daniel Hagemeier - dhagemei[aet]cebitec.uni-bielefeld.de
 *         Armin Toepfer - atoepfer[aet]cebitec.uni-bielefeld.de
 *         Jan Krueger - jkrueger[aet]cebitec.uni-bielefeld.de
 */
 public class rnaalishapes_function_subopt_param   { 

     private final static Logger log = Logger.getLogger(rnaalishapes_function_subopt_param.class);


    /* #########################################
     * #     DI method setMessages             #
     * ######################################### */
    private MessagesInterface messages;

    public void setMessages(MessagesInterface messages) {
        this.messages = messages;
    }
    
    /* #########################################
     * #     parameter default values          #
     * ######################################### */
    private static final String defaultValue_rnaalishapes_parameter_relative_deviation="10.0";
private static final String defaultValue_rnaalishapes_parameter_absolute_deviation=""; //no default specified

private static final String defaultValue_rnaalishapes_parameter_structureprobs="0";

private static final String defaultValue_rnaalishapes_parameter_structure_conservation_index="0";
private static final String defaultValue_rnaalishapes_parameter_consensus="consensus";
private static final String defaultValue_rnaalishapes_parameter_pairing_fraction="-200";
private static final String defaultValue_rnaalishapes_parameter_cfactor="1.0";
private static final String defaultValue_rnaalishapes_parameter_nfactor="1.0";

private static final String defaultValue_rnaalishapes_parameter_grammar="overdangle";
private static final String defaultValue_rnaalishapes_parameter_shape_level="5";
private static final String defaultValue_rnaalishapes_parameter_temperature="37.0";
private static final String defaultValue_rnaalishapes_parameter_thermodynamic_model_parameters="rna_turner2004.par";
private static final String defaultValue_rnaalishapes_parameter_lonely_base_pairs="0";

private static final String defaultValue_rnaalishapes_parameter_window_size=""; //no default specified
private static final String defaultValue_rnaalishapes_parameter_window_increment="1";




public void reset(){
rnaalishapes_parameter_relative_deviation = defaultValue_rnaalishapes_parameter_relative_deviation;
rnaalishapes_parameter_absolute_deviation = defaultValue_rnaalishapes_parameter_absolute_deviation;
rnaalishapes_parameter_pairing_fraction = defaultValue_rnaalishapes_parameter_pairing_fraction;
rnaalishapes_parameter_cfactor = defaultValue_rnaalishapes_parameter_cfactor;
rnaalishapes_parameter_nfactor = defaultValue_rnaalishapes_parameter_nfactor;
rnaalishapes_parameter_shape_level = defaultValue_rnaalishapes_parameter_shape_level;
rnaalishapes_parameter_temperature = defaultValue_rnaalishapes_parameter_temperature;
rnaalishapes_parameter_window_size = defaultValue_rnaalishapes_parameter_window_size;
rnaalishapes_parameter_window_increment = defaultValue_rnaalishapes_parameter_window_increment;
}


public boolean defaultParams(){
if (true 
&& rnaalishapes_parameter_relative_deviation.equals(defaultValue_rnaalishapes_parameter_relative_deviation)
&& rnaalishapes_parameter_absolute_deviation.equals(defaultValue_rnaalishapes_parameter_absolute_deviation)
&& rnaalishapes_parameter_pairing_fraction.equals(defaultValue_rnaalishapes_parameter_pairing_fraction)
&& rnaalishapes_parameter_cfactor.equals(defaultValue_rnaalishapes_parameter_cfactor)
&& rnaalishapes_parameter_nfactor.equals(defaultValue_rnaalishapes_parameter_nfactor)
&& rnaalishapes_parameter_shape_level.equals(defaultValue_rnaalishapes_parameter_shape_level)
&& rnaalishapes_parameter_temperature.equals(defaultValue_rnaalishapes_parameter_temperature)
&& rnaalishapes_parameter_window_size.equals(defaultValue_rnaalishapes_parameter_window_size)
&& rnaalishapes_parameter_window_increment.equals(defaultValue_rnaalishapes_parameter_window_increment)
){
return true;
} else { return false; }
}



    /* #########################################
     * #     parameters are valid ?            #
     * ######################################### */
     public boolean isValid(){
        return true
                
                && valid_rnaalishapes_parameter_relative_deviation
                
                && valid_rnaalishapes_parameter_absolute_deviation
                
                && valid_rnaalishapes_parameter_structureprobs
                
                && valid_rnaalishapes_parameter_structure_conservation_index
                
                && valid_rnaalishapes_parameter_consensus
                
                && valid_rnaalishapes_parameter_pairing_fraction
                
                && valid_rnaalishapes_parameter_cfactor
                
                && valid_rnaalishapes_parameter_nfactor
                
                && valid_rnaalishapes_parameter_grammar
                
                && valid_rnaalishapes_parameter_shape_level
                
                && valid_rnaalishapes_parameter_temperature
                
                && valid_rnaalishapes_parameter_thermodynamic_model_parameters
                
                && valid_rnaalishapes_parameter_lonely_base_pairs
                
                && valid_rnaalishapes_parameter_window_size
                
                && valid_rnaalishapes_parameter_window_increment
                
                ;
    }
     
    /* ######################################
     * # example                            #
     * ######################################
     */
    public boolean checkAndSet(Prop p) {
        
        if (p.getIdref().equals("rnaalishapes_parameter_relative_deviation")) {
            rnaalishapes_parameter_relative_deviation = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_absolute_deviation")) {
            rnaalishapes_parameter_absolute_deviation = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_structureprobs")) {
            rnaalishapes_parameter_structureprobs = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_structure_conservation_index")) {
            rnaalishapes_parameter_structure_conservation_index = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_consensus")) {
            rnaalishapes_parameter_consensus = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_pairing_fraction")) {
            rnaalishapes_parameter_pairing_fraction = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_cfactor")) {
            rnaalishapes_parameter_cfactor = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_nfactor")) {
            rnaalishapes_parameter_nfactor = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_grammar")) {
            rnaalishapes_parameter_grammar = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_shape_level")) {
            rnaalishapes_parameter_shape_level = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_temperature")) {
            rnaalishapes_parameter_temperature = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_thermodynamic_model_parameters")) {
            rnaalishapes_parameter_thermodynamic_model_parameters = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_lonely_base_pairs")) {
            rnaalishapes_parameter_lonely_base_pairs = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_window_size")) {
            rnaalishapes_parameter_window_size = p.getValue();
            return true;
        }
        
        if (p.getIdref().equals("rnaalishapes_parameter_window_increment")) {
            rnaalishapes_parameter_window_increment = p.getValue();
            return true;
        }
        
        return false;
    }

     /* #########################################
     *          fault(=invalid) messages
     * ######################################### */
    private HashMap<String, String> faultmsg = new HashMap<String, String>();

    public String faultmsg(String key) {
        return faultmsg.get(key);
    }

    public boolean faultmsgExist(String key) {
        return faultmsg.containsKey(key);
    }

    public void addFaultmsg(String key, String value) {
        faultmsg.put(key, value);
    }

    /**
     * Return a Parameter list of all set (non-empty) parameters.
     *
     * @return List<Pair<parameter_id<String>,parameter_value<String>>
     */
    public List<Pair<String, String>> getParameterList() {
        List<Pair<String, String>> pairlist = new ArrayList<Pair<String, String>>();
        
        if (!rnaalishapes_parameter_relative_deviation.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_relative_deviation", rnaalishapes_parameter_relative_deviation));
        }
        
        if (!rnaalishapes_parameter_absolute_deviation.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_absolute_deviation", rnaalishapes_parameter_absolute_deviation));
        }
        
        if (!rnaalishapes_parameter_structureprobs.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_structureprobs", rnaalishapes_parameter_structureprobs));
        }
        
        if (!rnaalishapes_parameter_structure_conservation_index.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_structure_conservation_index", rnaalishapes_parameter_structure_conservation_index));
        }
        
        if (!rnaalishapes_parameter_consensus.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_consensus", rnaalishapes_parameter_consensus));
        }
        
        if (!rnaalishapes_parameter_pairing_fraction.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_pairing_fraction", rnaalishapes_parameter_pairing_fraction));
        }
        
        if (!rnaalishapes_parameter_cfactor.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_cfactor", rnaalishapes_parameter_cfactor));
        }
        
        if (!rnaalishapes_parameter_nfactor.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_nfactor", rnaalishapes_parameter_nfactor));
        }
        
        if (!rnaalishapes_parameter_grammar.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_grammar", rnaalishapes_parameter_grammar));
        }
        
        if (!rnaalishapes_parameter_shape_level.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_shape_level", rnaalishapes_parameter_shape_level));
        }
        
        if (!rnaalishapes_parameter_temperature.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_temperature", rnaalishapes_parameter_temperature));
        }
        
        if (!rnaalishapes_parameter_thermodynamic_model_parameters.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_thermodynamic_model_parameters", rnaalishapes_parameter_thermodynamic_model_parameters));
        }
        
        if (!rnaalishapes_parameter_lonely_base_pairs.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_lonely_base_pairs", rnaalishapes_parameter_lonely_base_pairs));
        }
        
        if (!rnaalishapes_parameter_window_size.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_window_size", rnaalishapes_parameter_window_size));
        }
        
        if (!rnaalishapes_parameter_window_increment.isEmpty()) {
            pairlist.add(new Pair<String, String>("rnaalishapes_parameter_window_increment", rnaalishapes_parameter_window_increment));
        }
        

        return pairlist;
    }


    /* #########################################
     * #  parameter getter, setter, validator  #
     * ######################################### */
     /*--- parameter 'rnaalishapes_parameter_relative_deviation' --- */private boolean help_rnaalishapes_parameter_relative_deviation = false;public boolean isHelp_rnaalishapes_parameter_relative_deviation(){ return help_rnaalishapes_parameter_relative_deviation;}public void helpAction_rnaalishapes_parameter_relative_deviation(ActionEvent e){help_rnaalishapes_parameter_relative_deviation = !help_rnaalishapes_parameter_relative_deviation;}private String rnaalishapes_parameter_relative_deviation = defaultValue_rnaalishapes_parameter_relative_deviation;
private boolean valid_rnaalishapes_parameter_relative_deviation = true;
public String getRnaalishapes_parameter_relative_deviation(){return rnaalishapes_parameter_relative_deviation;}public void setRnaalishapes_parameter_relative_deviation(String input){
if (!rnaalishapes_parameter_relative_deviation.equals(input)) {
this.rnaalishapes_parameter_relative_deviation=input;
try {
if (!input.isEmpty()) {
float tmp =  Float.parseFloat(input);
Utilities.validate_rnaalishapes_parameter_relative_deviation(tmp,messages);
}
//remove possible previous set faultmsg
faultmsg.remove("rnaalishapes_parameter_relative_deviation_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_relative_deviation = true;
return;
}catch (NumberFormatException e) {
faultmsg.put("rnaalishapes_parameter_relative_deviation_rnaalishapes_function_subopt",messages.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.FLOAT"));
}catch (ValidationException e) {
faultmsg.put("rnaalishapes_parameter_relative_deviation_rnaalishapes_function_subopt",e.getMessage());
}
valid_rnaalishapes_parameter_relative_deviation = false;}
}
/*--- parameter 'rnaalishapes_parameter_absolute_deviation' --- */private boolean help_rnaalishapes_parameter_absolute_deviation = false;public boolean isHelp_rnaalishapes_parameter_absolute_deviation(){ return help_rnaalishapes_parameter_absolute_deviation;}public void helpAction_rnaalishapes_parameter_absolute_deviation(ActionEvent e){help_rnaalishapes_parameter_absolute_deviation = !help_rnaalishapes_parameter_absolute_deviation;}private String rnaalishapes_parameter_absolute_deviation = defaultValue_rnaalishapes_parameter_absolute_deviation;
private boolean valid_rnaalishapes_parameter_absolute_deviation = true;
public String getRnaalishapes_parameter_absolute_deviation(){return rnaalishapes_parameter_absolute_deviation;}public void setRnaalishapes_parameter_absolute_deviation(String input){
if (!rnaalishapes_parameter_absolute_deviation.equals(input)) {
this.rnaalishapes_parameter_absolute_deviation=input;
try {
if (!input.isEmpty()) {
float tmp =  Float.parseFloat(input);
Utilities.validate_rnaalishapes_parameter_absolute_deviation(tmp,messages);
}
//remove possible previous set faultmsg
faultmsg.remove("rnaalishapes_parameter_absolute_deviation_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_absolute_deviation = true;
return;
}catch (NumberFormatException e) {
faultmsg.put("rnaalishapes_parameter_absolute_deviation_rnaalishapes_function_subopt",messages.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.FLOAT"));
}catch (ValidationException e) {
faultmsg.put("rnaalishapes_parameter_absolute_deviation_rnaalishapes_function_subopt",e.getMessage());
}
valid_rnaalishapes_parameter_absolute_deviation = false;}
}
/*--- parameter 'rnaalishapes_parameter_structureprobs' --- */
private boolean help_rnaalishapes_parameter_structureprobs = false;
public boolean isHelp_rnaalishapes_parameter_structureprobs(){
 return help_rnaalishapes_parameter_structureprobs;
 }
public void helpAction_rnaalishapes_parameter_structureprobs(ActionEvent e){
help_rnaalishapes_parameter_structureprobs = !help_rnaalishapes_parameter_structureprobs;
} 
private String rnaalishapes_parameter_structureprobs=defaultValue_rnaalishapes_parameter_structureprobs;
private boolean valid_rnaalishapes_parameter_structureprobs= true;
public String getRnaalishapes_parameter_structureprobs(){
return rnaalishapes_parameter_structureprobs;
}
public void setRnaalishapes_parameter_structureprobs(String input){
if (!rnaalishapes_parameter_structureprobs.equals(input)) {
try {
Utilities.validate_rnaalishapes_parameter_structureprobs(input,messages);
this.rnaalishapes_parameter_structureprobs=input;
faultmsg.remove("rnaalishapes_parameter_structureprobs_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_structureprobs = true;
return;
} catch (ValidationException e){
faultmsg.put("rnaalishapes_parameter_structureprobs_rnaalishapes_function_subopt",e.getMessage());}
valid_rnaalishapes_parameter_structureprobs = false;
}
}
/*--- parameter 'rnaalishapes_parameter_structure_conservation_index' --- */
private boolean help_rnaalishapes_parameter_structure_conservation_index = false;
public boolean isHelp_rnaalishapes_parameter_structure_conservation_index(){
 return help_rnaalishapes_parameter_structure_conservation_index;
 }
public void helpAction_rnaalishapes_parameter_structure_conservation_index(ActionEvent e){
help_rnaalishapes_parameter_structure_conservation_index = !help_rnaalishapes_parameter_structure_conservation_index;
} 
private String rnaalishapes_parameter_structure_conservation_index=defaultValue_rnaalishapes_parameter_structure_conservation_index;
private boolean valid_rnaalishapes_parameter_structure_conservation_index= true;
public String getRnaalishapes_parameter_structure_conservation_index(){
return rnaalishapes_parameter_structure_conservation_index;
}
public void setRnaalishapes_parameter_structure_conservation_index(String input){
if (!rnaalishapes_parameter_structure_conservation_index.equals(input)) {
try {
Utilities.validate_rnaalishapes_parameter_structure_conservation_index(input,messages);
this.rnaalishapes_parameter_structure_conservation_index=input;
faultmsg.remove("rnaalishapes_parameter_structure_conservation_index_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_structure_conservation_index = true;
return;
} catch (ValidationException e){
faultmsg.put("rnaalishapes_parameter_structure_conservation_index_rnaalishapes_function_subopt",e.getMessage());}
valid_rnaalishapes_parameter_structure_conservation_index = false;
}
}
/*--- parameter 'rnaalishapes_parameter_consensus' --- */
private boolean help_rnaalishapes_parameter_consensus = false;
public boolean isHelp_rnaalishapes_parameter_consensus(){
 return help_rnaalishapes_parameter_consensus;
 }
public void helpAction_rnaalishapes_parameter_consensus(ActionEvent e){
help_rnaalishapes_parameter_consensus = !help_rnaalishapes_parameter_consensus;
} 
private String rnaalishapes_parameter_consensus=defaultValue_rnaalishapes_parameter_consensus;
private boolean valid_rnaalishapes_parameter_consensus= true;
public String getRnaalishapes_parameter_consensus(){
return rnaalishapes_parameter_consensus;
}
public void setRnaalishapes_parameter_consensus(String input){
if (!rnaalishapes_parameter_consensus.equals(input)) {
try {
Utilities.validate_rnaalishapes_parameter_consensus(input,messages);
this.rnaalishapes_parameter_consensus=input;
faultmsg.remove("rnaalishapes_parameter_consensus_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_consensus = true;
return;
} catch (ValidationException e){
faultmsg.put("rnaalishapes_parameter_consensus_rnaalishapes_function_subopt",e.getMessage());}
valid_rnaalishapes_parameter_consensus = false;
}
}
/*--- parameter 'rnaalishapes_parameter_pairing_fraction' --- */private boolean help_rnaalishapes_parameter_pairing_fraction = false;public boolean isHelp_rnaalishapes_parameter_pairing_fraction(){ return help_rnaalishapes_parameter_pairing_fraction;}public void helpAction_rnaalishapes_parameter_pairing_fraction(ActionEvent e){help_rnaalishapes_parameter_pairing_fraction = !help_rnaalishapes_parameter_pairing_fraction;}private String rnaalishapes_parameter_pairing_fraction = defaultValue_rnaalishapes_parameter_pairing_fraction;
private boolean valid_rnaalishapes_parameter_pairing_fraction = true;
public String getRnaalishapes_parameter_pairing_fraction(){return rnaalishapes_parameter_pairing_fraction;}public void setRnaalishapes_parameter_pairing_fraction(String input){
if (!rnaalishapes_parameter_pairing_fraction.equals(input)) {
this.rnaalishapes_parameter_pairing_fraction=input;
try {
if (!input.isEmpty()) {
int tmp =  Integer.parseInt(input);
Utilities.validate_rnaalishapes_parameter_pairing_fraction(tmp,messages);
}
//remove possible previous set faultmsg
faultmsg.remove("rnaalishapes_parameter_pairing_fraction_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_pairing_fraction = true;
return;
}catch (NumberFormatException e) {
faultmsg.put("rnaalishapes_parameter_pairing_fraction_rnaalishapes_function_subopt",messages.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.INTEGER"));
}catch (ValidationException e) {
faultmsg.put("rnaalishapes_parameter_pairing_fraction_rnaalishapes_function_subopt",e.getMessage());
}
valid_rnaalishapes_parameter_pairing_fraction = false;}
}
/*--- parameter 'rnaalishapes_parameter_cfactor' --- */private boolean help_rnaalishapes_parameter_cfactor = false;public boolean isHelp_rnaalishapes_parameter_cfactor(){ return help_rnaalishapes_parameter_cfactor;}public void helpAction_rnaalishapes_parameter_cfactor(ActionEvent e){help_rnaalishapes_parameter_cfactor = !help_rnaalishapes_parameter_cfactor;}private String rnaalishapes_parameter_cfactor = defaultValue_rnaalishapes_parameter_cfactor;
private boolean valid_rnaalishapes_parameter_cfactor = true;
public String getRnaalishapes_parameter_cfactor(){return rnaalishapes_parameter_cfactor;}public void setRnaalishapes_parameter_cfactor(String input){
if (!rnaalishapes_parameter_cfactor.equals(input)) {
this.rnaalishapes_parameter_cfactor=input;
try {
if (!input.isEmpty()) {
float tmp =  Float.parseFloat(input);
Utilities.validate_rnaalishapes_parameter_cfactor(tmp,messages);
}
//remove possible previous set faultmsg
faultmsg.remove("rnaalishapes_parameter_cfactor_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_cfactor = true;
return;
}catch (NumberFormatException e) {
faultmsg.put("rnaalishapes_parameter_cfactor_rnaalishapes_function_subopt",messages.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.FLOAT"));
}catch (ValidationException e) {
faultmsg.put("rnaalishapes_parameter_cfactor_rnaalishapes_function_subopt",e.getMessage());
}
valid_rnaalishapes_parameter_cfactor = false;}
}
/*--- parameter 'rnaalishapes_parameter_nfactor' --- */private boolean help_rnaalishapes_parameter_nfactor = false;public boolean isHelp_rnaalishapes_parameter_nfactor(){ return help_rnaalishapes_parameter_nfactor;}public void helpAction_rnaalishapes_parameter_nfactor(ActionEvent e){help_rnaalishapes_parameter_nfactor = !help_rnaalishapes_parameter_nfactor;}private String rnaalishapes_parameter_nfactor = defaultValue_rnaalishapes_parameter_nfactor;
private boolean valid_rnaalishapes_parameter_nfactor = true;
public String getRnaalishapes_parameter_nfactor(){return rnaalishapes_parameter_nfactor;}public void setRnaalishapes_parameter_nfactor(String input){
if (!rnaalishapes_parameter_nfactor.equals(input)) {
this.rnaalishapes_parameter_nfactor=input;
try {
if (!input.isEmpty()) {
float tmp =  Float.parseFloat(input);
Utilities.validate_rnaalishapes_parameter_nfactor(tmp,messages);
}
//remove possible previous set faultmsg
faultmsg.remove("rnaalishapes_parameter_nfactor_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_nfactor = true;
return;
}catch (NumberFormatException e) {
faultmsg.put("rnaalishapes_parameter_nfactor_rnaalishapes_function_subopt",messages.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.FLOAT"));
}catch (ValidationException e) {
faultmsg.put("rnaalishapes_parameter_nfactor_rnaalishapes_function_subopt",e.getMessage());
}
valid_rnaalishapes_parameter_nfactor = false;}
}
/*--- parameter 'rnaalishapes_parameter_grammar' --- */
private boolean help_rnaalishapes_parameter_grammar = false;
public boolean isHelp_rnaalishapes_parameter_grammar(){
 return help_rnaalishapes_parameter_grammar;
 }
public void helpAction_rnaalishapes_parameter_grammar(ActionEvent e){
help_rnaalishapes_parameter_grammar = !help_rnaalishapes_parameter_grammar;
} 
private String rnaalishapes_parameter_grammar=defaultValue_rnaalishapes_parameter_grammar;
private boolean valid_rnaalishapes_parameter_grammar= true;
public String getRnaalishapes_parameter_grammar(){
return rnaalishapes_parameter_grammar;
}
public void setRnaalishapes_parameter_grammar(String input){
if (!rnaalishapes_parameter_grammar.equals(input)) {
try {
Utilities.validate_rnaalishapes_parameter_grammar(input,messages);
this.rnaalishapes_parameter_grammar=input;
faultmsg.remove("rnaalishapes_parameter_grammar_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_grammar = true;
return;
} catch (ValidationException e){
faultmsg.put("rnaalishapes_parameter_grammar_rnaalishapes_function_subopt",e.getMessage());}
valid_rnaalishapes_parameter_grammar = false;
}
}
/*--- parameter 'rnaalishapes_parameter_shape_level' --- */private boolean help_rnaalishapes_parameter_shape_level = false;public boolean isHelp_rnaalishapes_parameter_shape_level(){ return help_rnaalishapes_parameter_shape_level;}public void helpAction_rnaalishapes_parameter_shape_level(ActionEvent e){help_rnaalishapes_parameter_shape_level = !help_rnaalishapes_parameter_shape_level;}private String rnaalishapes_parameter_shape_level = defaultValue_rnaalishapes_parameter_shape_level;
private boolean valid_rnaalishapes_parameter_shape_level = true;
public String getRnaalishapes_parameter_shape_level(){return rnaalishapes_parameter_shape_level;}public void setRnaalishapes_parameter_shape_level(String input){
if (!rnaalishapes_parameter_shape_level.equals(input)) {
this.rnaalishapes_parameter_shape_level=input;
try {
if (!input.isEmpty()) {
int tmp =  Integer.parseInt(input);
Utilities.validate_rnaalishapes_parameter_shape_level(tmp,messages);
}
//remove possible previous set faultmsg
faultmsg.remove("rnaalishapes_parameter_shape_level_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_shape_level = true;
return;
}catch (NumberFormatException e) {
faultmsg.put("rnaalishapes_parameter_shape_level_rnaalishapes_function_subopt",messages.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.INTEGER"));
}catch (ValidationException e) {
faultmsg.put("rnaalishapes_parameter_shape_level_rnaalishapes_function_subopt",e.getMessage());
}
valid_rnaalishapes_parameter_shape_level = false;}
}
/*--- parameter 'rnaalishapes_parameter_temperature' --- */private boolean help_rnaalishapes_parameter_temperature = false;public boolean isHelp_rnaalishapes_parameter_temperature(){ return help_rnaalishapes_parameter_temperature;}public void helpAction_rnaalishapes_parameter_temperature(ActionEvent e){help_rnaalishapes_parameter_temperature = !help_rnaalishapes_parameter_temperature;}private String rnaalishapes_parameter_temperature = defaultValue_rnaalishapes_parameter_temperature;
private boolean valid_rnaalishapes_parameter_temperature = true;
public String getRnaalishapes_parameter_temperature(){return rnaalishapes_parameter_temperature;}public void setRnaalishapes_parameter_temperature(String input){
if (!rnaalishapes_parameter_temperature.equals(input)) {
this.rnaalishapes_parameter_temperature=input;
try {
if (!input.isEmpty()) {
float tmp =  Float.parseFloat(input);
Utilities.validate_rnaalishapes_parameter_temperature(tmp,messages);
}
//remove possible previous set faultmsg
faultmsg.remove("rnaalishapes_parameter_temperature_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_temperature = true;
return;
}catch (NumberFormatException e) {
faultmsg.put("rnaalishapes_parameter_temperature_rnaalishapes_function_subopt",messages.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.FLOAT"));
}catch (ValidationException e) {
faultmsg.put("rnaalishapes_parameter_temperature_rnaalishapes_function_subopt",e.getMessage());
}
valid_rnaalishapes_parameter_temperature = false;}
}
/*--- parameter 'rnaalishapes_parameter_thermodynamic_model_parameters' --- */
private boolean help_rnaalishapes_parameter_thermodynamic_model_parameters = false;
public boolean isHelp_rnaalishapes_parameter_thermodynamic_model_parameters(){
 return help_rnaalishapes_parameter_thermodynamic_model_parameters;
 }
public void helpAction_rnaalishapes_parameter_thermodynamic_model_parameters(ActionEvent e){
help_rnaalishapes_parameter_thermodynamic_model_parameters = !help_rnaalishapes_parameter_thermodynamic_model_parameters;
} 
private String rnaalishapes_parameter_thermodynamic_model_parameters=defaultValue_rnaalishapes_parameter_thermodynamic_model_parameters;
private boolean valid_rnaalishapes_parameter_thermodynamic_model_parameters= true;
public String getRnaalishapes_parameter_thermodynamic_model_parameters(){
return rnaalishapes_parameter_thermodynamic_model_parameters;
}
public void setRnaalishapes_parameter_thermodynamic_model_parameters(String input){
if (!rnaalishapes_parameter_thermodynamic_model_parameters.equals(input)) {
try {
Utilities.validate_rnaalishapes_parameter_thermodynamic_model_parameters(input,messages);
this.rnaalishapes_parameter_thermodynamic_model_parameters=input;
faultmsg.remove("rnaalishapes_parameter_thermodynamic_model_parameters_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_thermodynamic_model_parameters = true;
return;
} catch (ValidationException e){
faultmsg.put("rnaalishapes_parameter_thermodynamic_model_parameters_rnaalishapes_function_subopt",e.getMessage());}
valid_rnaalishapes_parameter_thermodynamic_model_parameters = false;
}
}
/*--- parameter 'rnaalishapes_parameter_lonely_base_pairs' --- */
private boolean help_rnaalishapes_parameter_lonely_base_pairs = false;
public boolean isHelp_rnaalishapes_parameter_lonely_base_pairs(){
 return help_rnaalishapes_parameter_lonely_base_pairs;
 }
public void helpAction_rnaalishapes_parameter_lonely_base_pairs(ActionEvent e){
help_rnaalishapes_parameter_lonely_base_pairs = !help_rnaalishapes_parameter_lonely_base_pairs;
} 
private String rnaalishapes_parameter_lonely_base_pairs=defaultValue_rnaalishapes_parameter_lonely_base_pairs;
private boolean valid_rnaalishapes_parameter_lonely_base_pairs= true;
public String getRnaalishapes_parameter_lonely_base_pairs(){
return rnaalishapes_parameter_lonely_base_pairs;
}
public void setRnaalishapes_parameter_lonely_base_pairs(String input){
if (!rnaalishapes_parameter_lonely_base_pairs.equals(input)) {
try {
Utilities.validate_rnaalishapes_parameter_lonely_base_pairs(input,messages);
this.rnaalishapes_parameter_lonely_base_pairs=input;
faultmsg.remove("rnaalishapes_parameter_lonely_base_pairs_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_lonely_base_pairs = true;
return;
} catch (ValidationException e){
faultmsg.put("rnaalishapes_parameter_lonely_base_pairs_rnaalishapes_function_subopt",e.getMessage());}
valid_rnaalishapes_parameter_lonely_base_pairs = false;
}
}
/*--- parameter 'rnaalishapes_parameter_window_size' --- */private boolean help_rnaalishapes_parameter_window_size = false;public boolean isHelp_rnaalishapes_parameter_window_size(){ return help_rnaalishapes_parameter_window_size;}public void helpAction_rnaalishapes_parameter_window_size(ActionEvent e){help_rnaalishapes_parameter_window_size = !help_rnaalishapes_parameter_window_size;}private String rnaalishapes_parameter_window_size = defaultValue_rnaalishapes_parameter_window_size;
private boolean valid_rnaalishapes_parameter_window_size = true;
public String getRnaalishapes_parameter_window_size(){return rnaalishapes_parameter_window_size;}public void setRnaalishapes_parameter_window_size(String input){
if (!rnaalishapes_parameter_window_size.equals(input)) {
this.rnaalishapes_parameter_window_size=input;
try {
if (!input.isEmpty()) {
int tmp =  Integer.parseInt(input);
Utilities.validate_rnaalishapes_parameter_window_size(tmp,messages);
}
//remove possible previous set faultmsg
faultmsg.remove("rnaalishapes_parameter_window_size_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_window_size = true;
return;
}catch (NumberFormatException e) {
faultmsg.put("rnaalishapes_parameter_window_size_rnaalishapes_function_subopt",messages.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.INTEGER"));
}catch (ValidationException e) {
faultmsg.put("rnaalishapes_parameter_window_size_rnaalishapes_function_subopt",e.getMessage());
}
valid_rnaalishapes_parameter_window_size = false;}
}
/*--- parameter 'rnaalishapes_parameter_window_increment' --- */private boolean help_rnaalishapes_parameter_window_increment = false;public boolean isHelp_rnaalishapes_parameter_window_increment(){ return help_rnaalishapes_parameter_window_increment;}public void helpAction_rnaalishapes_parameter_window_increment(ActionEvent e){help_rnaalishapes_parameter_window_increment = !help_rnaalishapes_parameter_window_increment;}private String rnaalishapes_parameter_window_increment = defaultValue_rnaalishapes_parameter_window_increment;
private boolean valid_rnaalishapes_parameter_window_increment = true;
public String getRnaalishapes_parameter_window_increment(){return rnaalishapes_parameter_window_increment;}public void setRnaalishapes_parameter_window_increment(String input){
if (!rnaalishapes_parameter_window_increment.equals(input)) {
this.rnaalishapes_parameter_window_increment=input;
try {
if (!input.isEmpty()) {
int tmp =  Integer.parseInt(input);
Utilities.validate_rnaalishapes_parameter_window_increment(tmp,messages);
}
//remove possible previous set faultmsg
faultmsg.remove("rnaalishapes_parameter_window_increment_rnaalishapes_function_subopt");
valid_rnaalishapes_parameter_window_increment = true;
return;
}catch (NumberFormatException e) {
faultmsg.put("rnaalishapes_parameter_window_increment_rnaalishapes_function_subopt",messages.property("de.unibi.techfak.bibiserv.bibimainapp.input.param.num.INTEGER"));
}catch (ValidationException e) {
faultmsg.put("rnaalishapes_parameter_window_increment_rnaalishapes_function_subopt",e.getMessage());
}
valid_rnaalishapes_parameter_window_increment = false;}
}

    
}
