Answer: 
grammar gra_macrostate uses sig_foldrna(axiom = struct) {
  struct = left_dangle__LLLLLJLLJJJJJJ | left_unpaired__LLLLLJLLJJJJJJ | trafo(noleft_dangle__LLLLLJLLJJJJJJ) # h;
  weak__LJ = leftB__LJ | stack__LJ | rightB__LJ | hairpin__LJ # h;
  leftB__LJ = bl(BASE, REGION with maxsize(30), strong__LJ, BASE) with basepair # h;
  stack__LJ = sr(BASE, weak__LJ, BASE) with basepair # h;
  rightB__LJ = br(BASE, strong__LJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LJ = {weak__LJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  weak__LLJJ = iloop__LLJJ | leftB__LLJJ | stack__LLJJ | rightB__LLJJ # h;
  hairpin__LJ = hl(BASE, REGION with minsize(3), BASE) with basepair # h;
  iloop__LLJJ = il(BASE, REGION with maxsize(30), strong__LJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLJJ = bl(BASE, REGION with maxsize(30), strong__LLJJ, BASE) with basepair # h;
  stack__LLJJ = sr(BASE, weak__LLJJ, BASE) with basepair # h;
  block_dl__LJ = incl(edanglel__LJ) | sadd(REGION, edanglel__LJ) # h;
  edanglel__LJ = edl (BASE, strong__LJ, LOC ) # h;
  edangler__LJ = edr (LOC,  strong__LJ, BASE) # h;
  nodangle__LJ = drem(LOC,  strong__LJ, LOC ) # h;
  rightB__LLJJ = br(BASE, strong__LLJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLJJ = {weak__LLJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  block_dlr__LJ = incl(edanglelr__LJ) | ssadd(REGION, edanglelr__LJ) # h;
  edanglelr__LJ = edlr(BASE, strong__LJ, BASE) # h;
  block_dl__LLJJ = incl(edanglel__LLJJ) | sadd(REGION, edanglel__LLJJ) # h;
  edanglel__LLJJ = edl (BASE, strong__LLJJ, LOC ) # h;
  edangler__LLJJ = edr (LOC,  strong__LLJJ, BASE) # h;
  nodangle__LLJJ = drem(LOC,  strong__LLJJ, LOC ) # h;
  weak__LLJLLJJJ = leftB__LLJLLJJJ | stack__LLJLLJJJ | rightB__LLJLLJJJ | multiloop__LLJLLJJJ # h;
  block_dlr__LLJJ = incl(edanglelr__LLJJ) | ssadd(REGION, edanglelr__LLJJ) # h;
  edanglelr__LLJJ = edlr(BASE, strong__LLJJ, BASE) # h;
  leftB__LLJLLJJJ = bl(BASE, REGION with maxsize(30), strong__LLJLLJJJ, BASE) with basepair # h;
  stack__LLJLLJJJ = sr(BASE, weak__LLJLLJJJ, BASE) with basepair # h;
  left_unpairedEnd = sadd(BASE, nil(LOC)) | sadd(BASE, left_unpairedEnd) # h;
  rightB__LLJLLJJJ = br(BASE, strong__LLJLLJJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLJLLJJJ = {weak__LLJLLJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLJLLJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  weak__LLLJLLJJJJ = iloop__LLLJLLJJJJ | leftB__LLLJLLJJJJ | stack__LLLJLLJJJJ | rightB__LLLJLLJJJJ # h;
  iloop__LLLJLLJJJJ = il(BASE, REGION with maxsize(30), strong__LLJLLJJJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLLJLLJJJJ = bl(BASE, REGION with maxsize(30), strong__LLLJLLJJJJ, BASE) with basepair # h;
  ml_comps1__LJLLJJ = combine(block_dl__LJ, no_dl_no_ss_end__LLJJ) | acomb(block_dl__LJ, BASE, no_dl_no_ss_end__LLJJ) | combine(block_dlr__LJ, dl_or_ss_left_no_ss_end__LLJJ) # h;
  ml_comps2__LJLLJJ = combine(incl(nodangle__LJ), no_dl_no_ss_end__LLJJ) | acomb(incl(nodangle__LJ), BASE, no_dl_no_ss_end__LLJJ) | combine(incl(edangler__LJ), dl_or_ss_left_no_ss_end__LLJJ) # h;
  ml_comps3__LJLLJJ = combine(incl(nodangle__LJ), no_dl_ss_end__LLJJ) | acomb(incl(nodangle__LJ), BASE, no_dl_ss_end__LLJJ) | combine(incl(edangler__LJ), dl_or_ss_left_ss_end__LLJJ) # h;
  ml_comps4__LJLLJJ = combine(block_dl__LJ, no_dl_ss_end__LLJJ) | acomb(block_dl__LJ, BASE, no_dl_ss_end__LLJJ) | combine(block_dlr__LJ, dl_or_ss_left_ss_end__LLJJ) # h;
  stack__LLLJLLJJJJ = sr(BASE, weak__LLLJLLJJJJ, BASE) with basepair # h;
  no_dl_ss_end__LLJJ = incl(edangler__LLJJ) | addss(incl(edangler__LLJJ), REGION) # h;
  rightB__LLLJLLJJJJ = br(BASE, strong__LLLJLLJJJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLLJLLJJJJ = {weak__LLLJLLJJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLLJLLJJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  weak__LLLLJLLJJJJJ = iloop__LLLLJLLJJJJJ | leftB__LLLLJLLJJJJJ | stack__LLLLJLLJJJJJ | rightB__LLLLJLLJJJJJ # h;
  iloop__LLLLJLLJJJJJ = il(BASE, REGION with maxsize(30), strong__LLLJLLJJJJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLLLJLLJJJJJ = bl(BASE, REGION with maxsize(30), strong__LLLLJLLJJJJJ, BASE) with basepair # h;
  multiloop__LLJLLJJJ = ml(BASE, ml_comps2__LJLLJJ, BASE) with basepair | mldl(BASE, BASE, ml_comps1__LJLLJJ, BASE) with basepair | mldr(BASE, ml_comps3__LJLLJJ, BASE, BASE) with basepair | mladl(BASE, BASE, ml_comps2__LJLLJJ, BASE) with basepair | mladr(BASE, ml_comps2__LJLLJJ, BASE, BASE) with basepair | mladldr(BASE, BASE, ml_comps3__LJLLJJ, BASE, BASE) with basepair | mladlr(BASE, BASE, ml_comps2__LJLLJJ, BASE, BASE) with basepair | mldladr(BASE, BASE, ml_comps1__LJLLJJ, BASE, BASE) with basepair | mldlr(BASE, BASE, ml_comps4__LJLLJJ, BASE, BASE) with basepair # h;
  stack__LLLLJLLJJJJJ = sr(BASE, weak__LLLLJLLJJJJJ, BASE) with basepair # h;
  rightB__LLLLJLLJJJJJ = br(BASE, strong__LLLLJLLJJJJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLLLJLLJJJJJ = {weak__LLLLJLLJJJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLLLJLLJJJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  weak__LLLLLJLLJJJJJJ = iloop__LLLLLJLLJJJJJJ | leftB__LLLLLJLLJJJJJJ | stack__LLLLLJLLJJJJJJ | rightB__LLLLLJLLJJJJJJ # h;
  iloop__LLLLLJLLJJJJJJ = il(BASE, REGION with maxsize(30), strong__LLLLJLLJJJJJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLLLLJLLJJJJJJ = bl(BASE, REGION with maxsize(30), strong__LLLLLJLLJJJJJJ, BASE) with basepair # h;
  no_dl_no_ss_end__LLJJ = incl(nodangle__LLJJ) # h;
  stack__LLLLLJLLJJJJJJ = sr(BASE, weak__LLLLLJLLJJJJJJ, BASE) with basepair # h;
  rightB__LLLLLJLLJJJJJJ = br(BASE, strong__LLLLLJLLJJJJJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLLLLJLLJJJJJJ = {weak__LLLLLJLLJJJJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLLLLJLLJJJJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  edanglel__LLLLLJLLJJJJJJ = edl (BASE, strong__LLLLLJLLJJJJJJ, LOC ) # h;
  edangler__LLLLLJLLJJJJJJ = edr (LOC,  strong__LLLLLJLLJJJJJJ, BASE) # h;
  nodangle__LLLLLJLLJJJJJJ = drem(LOC,  strong__LLLLLJLLJJJJJJ, LOC ) # h;
  edanglelr__LLLLLJLLJJJJJJ = edlr(BASE, strong__LLLLLJLLJJJJJJ, BASE) # h;
  dl_or_ss_left_ss_end__LLJJ = block_dlr__LLJJ | addss(block_dlr__LLJJ, REGION) # h;
  left_dangle__LLLLLJLLJJJJJJ = cadd_Pr(edanglel__LLLLLJLLJJJJJJ, nil(LOC)) | cadd(edanglelr__LLLLLJLLJJJJJJ, {nil(LOC) | left_unpairedEnd}) # h;
  dl_or_ss_left_no_ss_end__LLJJ = block_dl__LLJJ # h;
  left_unpaired__LLLLLJLLJJJJJJ = sadd(BASE, left_dangle__LLLLLJLLJJJJJJ) | sadd(BASE, left_unpaired__LLLLLJLLJJJJJJ) # h;
  noleft_dangle__LLLLLJLLJJJJJJ = cadd_Pr_Pr_Pr(nodangle__LLLLLJLLJJJJJJ, nil(LOC)) | cadd_Pr_Pr(edangler__LLLLLJLLJJJJJJ, {nil(LOC) | left_unpairedEnd}) # h;
}


