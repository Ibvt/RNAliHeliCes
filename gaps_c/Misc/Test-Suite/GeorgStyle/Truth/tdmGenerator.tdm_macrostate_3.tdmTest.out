Answer: 
grammar gra_macrostate uses sig_foldrna(axiom = struct) {
  struct = left_dangle__LLJLLLLJJLJJJJ | left_unpaired__LLJLLLLJJLJJJJ | trafo(noleft_dangle__LLJLLLLJJLJJJJ) # h;
  weak__LJ = stack__LJ | hairpin__LJ # h;
  stack__LJ = sr(BASE, weak__LJ, BASE) with basepair # h;
  strong__LJ = {weak__LJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  weak__LLJJ = iloop__LLJJ | leftB__LLJJ | stack__LLJJ | rightB__LLJJ # h;
  hairpin__LJ = hl(BASE, REGION with minsize(3), BASE) with basepair # h;
  iloop__LLJJ = il(BASE, REGION with maxsize(30), strong__LJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLJJ = bl(BASE, REGION with maxsize(30), strong__LJ, BASE) with basepair # h;
  stack__LLJJ = sr(BASE, weak__LLJJ, BASE) with basepair # h;
  block_dl__LJ = incl(edanglel__LJ) | sadd(REGION, edanglel__LJ) # h;
  edanglel__LJ = edl (BASE, strong__LJ, LOC ) # h;
  edangler__LJ = edr (LOC,  strong__LJ, BASE) # h;
  nodangle__LJ = drem(LOC,  strong__LJ, LOC ) # h;
  rightB__LLJJ = br(BASE, strong__LJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLJJ = {weak__LLJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  block_dlr__LJ = incl(edanglelr__LJ) | ssadd(REGION, edanglelr__LJ) # h;
  edanglelr__LJ = edlr(BASE, strong__LJ, BASE) # h;
  block_dl__LLJJ = incl(edanglel__LLJJ) | sadd(REGION, edanglel__LLJJ) # h;
  edanglel__LLJJ = edl (BASE, strong__LLJJ, LOC ) # h;
  edangler__LLJJ = edr (LOC,  strong__LLJJ, BASE) # h;
  nodangle__LLJJ = drem(LOC,  strong__LLJJ, LOC ) # h;
  weak__LLLJJLJJ = stack__LLLJJLJJ | multiloop__LLLJJLJJ # h;
  block_dlr__LLJJ = incl(edanglelr__LLJJ) | ssadd(REGION, edanglelr__LLJJ) # h;
  edanglelr__LLJJ = edlr(BASE, strong__LLJJ, BASE) # h;
  stack__LLLJJLJJ = sr(BASE, weak__LLLJJLJJ, BASE) with basepair # h;
  left_unpairedEnd = sadd(BASE, nil(LOC)) | sadd(BASE, left_unpairedEnd) # h;
  no_dl_ss_end__LJ = incl(edangler__LJ) | addss(incl(edangler__LJ), REGION) # h;
  strong__LLLJJLJJ = {weak__LLLJJLJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLLJJLJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  weak__LLLLJJLJJJ = iloop__LLLLJJLJJJ | leftB__LLLLJJLJJJ | stack__LLLLJJLJJJ | rightB__LLLLJJLJJJ # h;
  iloop__LLLLJJLJJJ = il(BASE, REGION with maxsize(30), strong__LLLJJLJJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLLLJJLJJJ = bl(BASE, REGION with maxsize(30), strong__LLLJJLJJ, BASE) with basepair # h;
  ml_comps1__LLJJLJ = combine(block_dl__LLJJ, no_dl_no_ss_end__LJ) | acomb(block_dl__LLJJ, BASE, no_dl_no_ss_end__LJ) | combine(block_dlr__LLJJ, dl_or_ss_left_no_ss_end__LJ) # h;
  ml_comps2__LLJJLJ = combine(incl(nodangle__LLJJ), no_dl_no_ss_end__LJ) | acomb(incl(nodangle__LLJJ), BASE, no_dl_no_ss_end__LJ) | combine(incl(edangler__LLJJ), dl_or_ss_left_no_ss_end__LJ) # h;
  ml_comps3__LLJJLJ = combine(incl(nodangle__LLJJ), no_dl_ss_end__LJ) | acomb(incl(nodangle__LLJJ), BASE, no_dl_ss_end__LJ) | combine(incl(edangler__LLJJ), dl_or_ss_left_ss_end__LJ) # h;
  ml_comps4__LLJJLJ = combine(block_dl__LLJJ, no_dl_ss_end__LJ) | acomb(block_dl__LLJJ, BASE, no_dl_ss_end__LJ) | combine(block_dlr__LLJJ, dl_or_ss_left_ss_end__LJ) # h;
  stack__LLLLJJLJJJ = sr(BASE, weak__LLLLJJLJJJ, BASE) with basepair # h;
  rightB__LLLLJJLJJJ = br(BASE, strong__LLLJJLJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLLLJJLJJJ = {weak__LLLLJJLJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLLLJJLJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  multiloop__LLLJJLJJ = ml(BASE, ml_comps2__LLJJLJ, BASE) with basepair | mldl(BASE, BASE, ml_comps1__LLJJLJ, BASE) with basepair | mldr(BASE, ml_comps3__LLJJLJ, BASE, BASE) with basepair | mladl(BASE, BASE, ml_comps2__LLJJLJ, BASE) with basepair | mladr(BASE, ml_comps2__LLJJLJ, BASE, BASE) with basepair | mladldr(BASE, BASE, ml_comps3__LLJJLJ, BASE, BASE) with basepair | mladlr(BASE, BASE, ml_comps2__LLJJLJ, BASE, BASE) with basepair | mldladr(BASE, BASE, ml_comps1__LLJJLJ, BASE, BASE) with basepair | mldlr(BASE, BASE, ml_comps4__LLJJLJ, BASE, BASE) with basepair # h;
  no_dl_no_ss_end__LJ = incl(nodangle__LJ) # h;
  block_dl__LLLLJJLJJJ = incl(edanglel__LLLLJJLJJJ) | sadd(REGION, edanglel__LLLLJJLJJJ) # h;
  edanglel__LLLLJJLJJJ = edl (BASE, strong__LLLLJJLJJJ, LOC ) # h;
  edangler__LLLLJJLJJJ = edr (LOC,  strong__LLLLJJLJJJ, BASE) # h;
  nodangle__LLLLJJLJJJ = drem(LOC,  strong__LLLLJJLJJJ, LOC ) # h;
  weak__LLJLLLLJJLJJJJ = stack__LLJLLLLJJLJJJJ | multiloop__LLJLLLLJJLJJJJ # h;
  block_dlr__LLLLJJLJJJ = incl(edanglelr__LLLLJJLJJJ) | ssadd(REGION, edanglelr__LLLLJJLJJJ) # h;
  edanglelr__LLLLJJLJJJ = edlr(BASE, strong__LLLLJJLJJJ, BASE) # h;
  stack__LLJLLLLJJLJJJJ = sr(BASE, weak__LLJLLLLJJLJJJJ, BASE) with basepair # h;
  strong__LLJLLLLJJLJJJJ = {weak__LLJLLLLJJLJJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLJLLLLJJLJJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  ml_comps1__LJLLLLJJLJJJ = combine(block_dl__LJ, no_dl_no_ss_end__LLLLJJLJJJ) | acomb(block_dl__LJ, BASE, no_dl_no_ss_end__LLLLJJLJJJ) | combine(block_dlr__LJ, dl_or_ss_left_no_ss_end__LLLLJJLJJJ) # h;
  ml_comps2__LJLLLLJJLJJJ = combine(incl(nodangle__LJ), no_dl_no_ss_end__LLLLJJLJJJ) | acomb(incl(nodangle__LJ), BASE, no_dl_no_ss_end__LLLLJJLJJJ) | combine(incl(edangler__LJ), dl_or_ss_left_no_ss_end__LLLLJJLJJJ) # h;
  ml_comps3__LJLLLLJJLJJJ = combine(incl(nodangle__LJ), no_dl_ss_end__LLLLJJLJJJ) | acomb(incl(nodangle__LJ), BASE, no_dl_ss_end__LLLLJJLJJJ) | combine(incl(edangler__LJ), dl_or_ss_left_ss_end__LLLLJJLJJJ) # h;
  ml_comps4__LJLLLLJJLJJJ = combine(block_dl__LJ, no_dl_ss_end__LLLLJJLJJJ) | acomb(block_dl__LJ, BASE, no_dl_ss_end__LLLLJJLJJJ) | combine(block_dlr__LJ, dl_or_ss_left_ss_end__LLLLJJLJJJ) # h;
  dl_or_ss_left_ss_end__LJ = block_dlr__LJ | addss(block_dlr__LJ, REGION) # h;
  edanglel__LLJLLLLJJLJJJJ = edl (BASE, strong__LLJLLLLJJLJJJJ, LOC ) # h;
  edangler__LLJLLLLJJLJJJJ = edr (LOC,  strong__LLJLLLLJJLJJJJ, BASE) # h;
  no_dl_ss_end__LLLLJJLJJJ = incl(edangler__LLLLJJLJJJ) | addss(incl(edangler__LLLLJJLJJJ), REGION) # h;
  nodangle__LLJLLLLJJLJJJJ = drem(LOC,  strong__LLJLLLLJJLJJJJ, LOC ) # h;
  edanglelr__LLJLLLLJJLJJJJ = edlr(BASE, strong__LLJLLLLJJLJJJJ, BASE) # h;
  multiloop__LLJLLLLJJLJJJJ = ml(BASE, ml_comps2__LJLLLLJJLJJJ, BASE) with basepair | mladl(BASE, BASE, ml_comps2__LJLLLLJJLJJJ, BASE) with basepair | mladldr(BASE, BASE, ml_comps3__LJLLLLJJLJJJ, BASE, BASE) with basepair | mladlr(BASE, BASE, ml_comps2__LJLLLLJJLJJJ, BASE, BASE) with basepair | mladr(BASE, ml_comps2__LJLLLLJJLJJJ, BASE, BASE) with basepair | mldl(BASE, BASE, ml_comps1__LJLLLLJJLJJJ, BASE) with basepair | mldladr(BASE, BASE, ml_comps1__LJLLLLJJLJJJ, BASE, BASE) with basepair | mldlr(BASE, BASE, ml_comps4__LJLLLLJJLJJJ, BASE, BASE) with basepair | mldr(BASE, ml_comps3__LJLLLLJJLJJJ, BASE, BASE) with basepair # h;
  dl_or_ss_left_no_ss_end__LJ = block_dl__LJ # h;
  left_dangle__LLJLLLLJJLJJJJ = cadd_Pr(edanglel__LLJLLLLJJLJJJJ, nil(LOC)) | cadd(edanglelr__LLJLLLLJJLJJJJ, {nil(LOC) | left_unpairedEnd}) # h;
  no_dl_no_ss_end__LLLLJJLJJJ = incl(nodangle__LLLLJJLJJJ) # h;
  left_unpaired__LLJLLLLJJLJJJJ = sadd(BASE, left_dangle__LLJLLLLJJLJJJJ) | sadd(BASE, left_unpaired__LLJLLLLJJLJJJJ) # h;
  noleft_dangle__LLJLLLLJJLJJJJ = cadd_Pr_Pr_Pr(nodangle__LLJLLLLJJLJJJJ, nil(LOC)) | cadd_Pr_Pr(edangler__LLJLLLLJJLJJJJ, {nil(LOC) | left_unpairedEnd}) # h;
  dl_or_ss_left_ss_end__LLLLJJLJJJ = block_dlr__LLLLJJLJJJ | addss(block_dlr__LLLLJJLJJJ, REGION) # h;
  dl_or_ss_left_no_ss_end__LLLLJJLJJJ = block_dl__LLLLJJLJJJ # h;
}


