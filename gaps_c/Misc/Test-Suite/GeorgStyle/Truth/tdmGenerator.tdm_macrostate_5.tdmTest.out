Answer: 
grammar gra_macrostate uses sig_foldrna(axiom = struct) {
  struct = left_dangle__LJLLJLLJLJJJ | left_unpaired__LJLLJLLJLJJJ | trafo(noleft_dangle__LJLLJLLJLJJJ) # h;
  weak__LJ = iloop__LJ | leftB__LJ | stack__LJ | rightB__LJ | hairpin__LJ # h;
  iloop__LJ = il(BASE, REGION with maxsize(30), strong__LJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LJ = bl(BASE, REGION with maxsize(30), strong__LJ, BASE) with basepair # h;
  stack__LJ = sr(BASE, weak__LJ, BASE) with basepair # h;
  rightB__LJ = br(BASE, strong__LJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LJ = {weak__LJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  hairpin__LJ = hl(BASE, REGION with minsize(3), BASE) with basepair # h;
  block_dl__LJ = incl(edanglel__LJ) | sadd(REGION, edanglel__LJ) # h;
  edanglel__LJ = edl (BASE, strong__LJ, LOC ) # h;
  edangler__LJ = edr (LOC,  strong__LJ, BASE) # h;
  nodangle__LJ = drem(LOC,  strong__LJ, LOC ) # h;
  weak__LLJLJJ = iloop__LLJLJJ | leftB__LLJLJJ | stack__LLJLJJ | rightB__LLJLJJ | multiloop__LLJLJJ # h;
  block_dlr__LJ = incl(edanglelr__LJ) | ssadd(REGION, edanglelr__LJ) # h;
  edanglelr__LJ = edlr(BASE, strong__LJ, BASE) # h;
  iloop__LLJLJJ = il(BASE, REGION with maxsize(30), strong__LLJLJJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLJLJJ = bl(BASE, REGION with maxsize(30), strong__LLJLJJ, BASE) with basepair # h;
  stack__LLJLJJ = sr(BASE, weak__LLJLJJ, BASE) with basepair # h;
  rightB__LLJLJJ = br(BASE, strong__LLJLJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLJLJJ = {weak__LLJLJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLJLJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  ml_comps1__LJLJ = combine(block_dl__LJ, no_dl_no_ss_end__LJ) | acomb(block_dl__LJ, BASE, no_dl_no_ss_end__LJ) | combine(block_dlr__LJ, dl_or_ss_left_no_ss_end__LJ) # h;
  ml_comps2__LJLJ = combine(incl(nodangle__LJ), no_dl_no_ss_end__LJ) | acomb(incl(nodangle__LJ), BASE, no_dl_no_ss_end__LJ) | combine(incl(edangler__LJ), dl_or_ss_left_no_ss_end__LJ) # h;
  ml_comps3__LJLJ = combine(incl(nodangle__LJ), no_dl_ss_end__LJ) | acomb(incl(nodangle__LJ), BASE, no_dl_ss_end__LJ) | combine(incl(edangler__LJ), dl_or_ss_left_ss_end__LJ) # h;
  ml_comps4__LJLJ = combine(block_dl__LJ, no_dl_ss_end__LJ) | acomb(block_dl__LJ, BASE, no_dl_ss_end__LJ) | combine(block_dlr__LJ, dl_or_ss_left_ss_end__LJ) # h;
  block_dl__LLJLJJ = incl(edanglel__LLJLJJ) | sadd(REGION, edanglel__LLJLJJ) # h;
  edanglel__LLJLJJ = edl (BASE, strong__LLJLJJ, LOC ) # h;
  edangler__LLJLJJ = edr (LOC,  strong__LLJLJJ, BASE) # h;
  left_unpairedEnd = sadd(BASE, nil(LOC)) | sadd(BASE, left_unpairedEnd) # h;
  no_dl_ss_end__LJ = incl(edangler__LJ) | addss(incl(edangler__LJ), REGION) # h;
  nodangle__LLJLJJ = drem(LOC,  strong__LLJLJJ, LOC ) # h;
  weak__LLJLLJLJJJ = iloop__LLJLLJLJJJ | leftB__LLJLLJLJJJ | stack__LLJLLJLJJJ | rightB__LLJLLJLJJJ | multiloop__LLJLLJLJJJ # h;
  block_dlr__LLJLJJ = incl(edanglelr__LLJLJJ) | ssadd(REGION, edanglelr__LLJLJJ) # h;
  edanglelr__LLJLJJ = edlr(BASE, strong__LLJLJJ, BASE) # h;
  iloop__LLJLLJLJJJ = il(BASE, REGION with maxsize(30), strong__LLJLLJLJJJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLJLLJLJJJ = bl(BASE, REGION with maxsize(30), strong__LLJLLJLJJJ, BASE) with basepair # h;
  multiloop__LLJLJJ = ml(BASE, ml_comps2__LJLJ, BASE) with basepair | mldl(BASE, BASE, ml_comps1__LJLJ, BASE) with basepair | mldr(BASE, ml_comps3__LJLJ, BASE, BASE) with basepair | mladl(BASE, BASE, ml_comps2__LJLJ, BASE) with basepair | mladr(BASE, ml_comps2__LJLJ, BASE, BASE) with basepair | mladldr(BASE, BASE, ml_comps3__LJLJ, BASE, BASE) with basepair | mladlr(BASE, BASE, ml_comps2__LJLJ, BASE, BASE) with basepair | mldladr(BASE, BASE, ml_comps1__LJLJ, BASE, BASE) with basepair | mldlr(BASE, BASE, ml_comps4__LJLJ, BASE, BASE) with basepair # h;
  stack__LLJLLJLJJJ = sr(BASE, weak__LLJLLJLJJJ, BASE) with basepair # h;
  rightB__LLJLLJLJJJ = br(BASE, strong__LLJLLJLJJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLJLLJLJJJ = {weak__LLJLLJLJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLJLLJLJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  ml_comps1__LJLLJLJJ = combine(block_dl__LJ, no_dl_no_ss_end__LLJLJJ) | acomb(block_dl__LJ, BASE, no_dl_no_ss_end__LLJLJJ) | combine(block_dlr__LJ, dl_or_ss_left_no_ss_end__LLJLJJ) # h;
  ml_comps2__LJLLJLJJ = combine(incl(nodangle__LJ), no_dl_no_ss_end__LLJLJJ) | acomb(incl(nodangle__LJ), BASE, no_dl_no_ss_end__LLJLJJ) | combine(incl(edangler__LJ), dl_or_ss_left_no_ss_end__LLJLJJ) # h;
  ml_comps3__LJLLJLJJ = combine(incl(nodangle__LJ), no_dl_ss_end__LLJLJJ) | acomb(incl(nodangle__LJ), BASE, no_dl_ss_end__LLJLJJ) | combine(incl(edangler__LJ), dl_or_ss_left_ss_end__LLJLJJ) # h;
  ml_comps4__LJLLJLJJ = combine(block_dl__LJ, no_dl_ss_end__LLJLJJ) | acomb(block_dl__LJ, BASE, no_dl_ss_end__LLJLJJ) | combine(block_dlr__LJ, dl_or_ss_left_ss_end__LLJLJJ) # h;
  no_dl_no_ss_end__LJ = incl(nodangle__LJ) # h;
  edanglel__LLJLLJLJJJ = edl (BASE, strong__LLJLLJLJJJ, LOC ) # h;
  edangler__LLJLLJLJJJ = edr (LOC,  strong__LLJLLJLJJJ, BASE) # h;
  no_dl_ss_end__LLJLJJ = incl(edangler__LLJLJJ) | addss(incl(edangler__LLJLJJ), REGION) # h;
  nodangle__LLJLLJLJJJ = drem(LOC,  strong__LLJLLJLJJJ, LOC ) # h;
  edanglelr__LLJLLJLJJJ = edlr(BASE, strong__LLJLLJLJJJ, BASE) # h;
  multiloop__LLJLLJLJJJ = ml(BASE, ml_comps2__LJLLJLJJ, BASE) with basepair | mldl(BASE, BASE, ml_comps1__LJLLJLJJ, BASE) with basepair | mldr(BASE, ml_comps3__LJLLJLJJ, BASE, BASE) with basepair | mladl(BASE, BASE, ml_comps2__LJLLJLJJ, BASE) with basepair | mladr(BASE, ml_comps2__LJLLJLJJ, BASE, BASE) with basepair | mladldr(BASE, BASE, ml_comps3__LJLLJLJJ, BASE, BASE) with basepair | mladlr(BASE, BASE, ml_comps2__LJLLJLJJ, BASE, BASE) with basepair | mldladr(BASE, BASE, ml_comps1__LJLLJLJJ, BASE, BASE) with basepair | mldlr(BASE, BASE, ml_comps4__LJLLJLJJ, BASE, BASE) with basepair # h;
  left_dangle__LLJLLJLJJJ = cadd_Pr(edanglel__LLJLLJLJJJ, nil(LOC)) | cadd(edanglelr__LLJLLJLJJJ, {nil(LOC) | left_unpairedEnd}) # h;
  no_dl_no_ss_end__LLJLJJ = incl(nodangle__LLJLJJ) # h;
  dl_or_ss_left_ss_end__LJ = block_dlr__LJ | addss(block_dlr__LJ, REGION) # h;
  left_dangle__LJLLJLLJLJJJ = cadd_Pr(edanglel__LJ, noleft_dangle__LLJLLJLJJJ) | ambd(edanglel__LJ, BASE, noleft_dangle__LLJLLJLJJJ) | cadd(edanglelr__LJ, {left_dangle__LLJLLJLJJJ | left_unpaired__LLJLLJLJJJ}) # h;
  left_unpaired__LLJLLJLJJJ = sadd(BASE, left_dangle__LLJLLJLJJJ) | sadd(BASE, left_unpaired__LLJLLJLJJJ) # h;
  noleft_dangle__LLJLLJLJJJ = cadd_Pr_Pr_Pr(nodangle__LLJLLJLJJJ, nil(LOC)) | cadd_Pr_Pr(edangler__LLJLLJLJJJ, {nil(LOC) | left_unpairedEnd}) # h;
  dl_or_ss_left_no_ss_end__LJ = block_dl__LJ # h;
  left_unpaired__LJLLJLLJLJJJ = sadd(BASE, left_dangle__LJLLJLLJLJJJ) | sadd(BASE, left_unpaired__LJLLJLLJLJJJ) # h;
  noleft_dangle__LJLLJLLJLJJJ = ambd_Pr(nodangle__LJ, BASE, noleft_dangle__LLJLLJLJJJ) | cadd_Pr_Pr_Pr(nodangle__LJ, noleft_dangle__LLJLLJLJJJ) | cadd_Pr_Pr(edangler__LJ, {left_dangle__LLJLLJLJJJ | left_unpaired__LLJLLJLJJJ}) # h;
  dl_or_ss_left_ss_end__LLJLJJ = block_dlr__LLJLJJ | addss(block_dlr__LLJLJJ, REGION) # h;
  dl_or_ss_left_no_ss_end__LLJLJJ = block_dl__LLJLJJ # h;
}


