Answer: 
grammar gra_microstate uses sig_foldrna(axiom = struct) {
  struct = struct__LLLLLJLLJJJJJJ # h;
  weak__LJ = leftB__LJ | stack__LJ | rightB__LJ | hairpin__LJ # h;
  leftB__LJ = bl(BASE, REGION with maxsize(30), strong__LJ, BASE) with basepair # h;
  stack__LJ = sr(BASE, weak__LJ, BASE) with basepair # h;
  struct___ = nil(LOC) | sadd(BASE, struct___) # h;
  dangle__LJ = drem(LOC, strong__LJ,LOC) | edl(BASE, strong__LJ,LOC) | edr(LOC, strong__LJ,BASE) | edlr(BASE, strong__LJ,BASE) # h;
  rightB__LJ = br(BASE, strong__LJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LJ = {weak__LJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  weak__LLJJ = iloop__LLJJ | leftB__LLJJ | stack__LLJJ | rightB__LLJJ # h;
  hairpin__LJ = hl(BASE, REGION with minsize(3), BASE) with basepair # h;
  iloop__LLJJ = il(BASE, REGION with maxsize(30), strong__LJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLJJ = bl(BASE, REGION with maxsize(30), strong__LLJJ, BASE) with basepair # h;
  stack__LLJJ = sr(BASE, weak__LLJJ, BASE) with basepair # h;
  dangle__LLJJ = drem(LOC, strong__LLJJ,LOC) | edl(BASE, strong__LLJJ,LOC) | edr(LOC, strong__LLJJ,BASE) | edlr(BASE, strong__LLJJ,BASE) # h;
  rightB__LLJJ = br(BASE, strong__LLJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLJJ = {weak__LLJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  ml_comps__LLJJ = incl(dangle__LLJJ) | sadd(BASE, ml_comps__LLJJ) | addss(incl(dangle__LLJJ), REGION) # h;
  weak__LLJLLJJJ = leftB__LLJLLJJJ | stack__LLJLLJJJ | rightB__LLJLLJJJ | multiloop__LLJLLJJJ # h;
  leftB__LLJLLJJJ = bl(BASE, REGION with maxsize(30), strong__LLJLLJJJ, BASE) with basepair # h;
  stack__LLJLLJJJ = sr(BASE, weak__LLJLLJJJ, BASE) with basepair # h;
  ml_comps__LJLLJJ = sadd(BASE, ml_comps__LJLLJJ) | cadd(incl(dangle__LJ), ml_comps__LLJJ) # h;
  rightB__LLJLLJJJ = br(BASE, strong__LLJLLJJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLJLLJJJ = {weak__LLJLLJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLJLLJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  weak__LLLJLLJJJJ = iloop__LLLJLLJJJJ | leftB__LLLJLLJJJJ | stack__LLLJLLJJJJ | rightB__LLLJLLJJJJ # h;
  iloop__LLLJLLJJJJ = il(BASE, REGION with maxsize(30), strong__LLJLLJJJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLLJLLJJJJ = bl(BASE, REGION with maxsize(30), strong__LLLJLLJJJJ, BASE) with basepair # h;
  stack__LLLJLLJJJJ = sr(BASE, weak__LLLJLLJJJJ, BASE) with basepair # h;
  rightB__LLLJLLJJJJ = br(BASE, strong__LLLJLLJJJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLLJLLJJJJ = {weak__LLLJLLJJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLLJLLJJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  weak__LLLLJLLJJJJJ = iloop__LLLLJLLJJJJJ | leftB__LLLLJLLJJJJJ | stack__LLLLJLLJJJJJ | rightB__LLLLJLLJJJJJ # h;
  iloop__LLLLJLLJJJJJ = il(BASE, REGION with maxsize(30), strong__LLLJLLJJJJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLLLJLLJJJJJ = bl(BASE, REGION with maxsize(30), strong__LLLLJLLJJJJJ, BASE) with basepair # h;
  multiloop__LLJLLJJJ = ml(BASE, ml_comps__LJLLJJ, BASE) with basepair | mldl(BASE, BASE, ml_comps__LJLLJJ, BASE) with basepair | mldr(BASE, ml_comps__LJLLJJ, BASE, BASE) with basepair | mldlr(BASE, BASE, ml_comps__LJLLJJ, BASE, BASE) with basepair # h;
  stack__LLLLJLLJJJJJ = sr(BASE, weak__LLLLJLLJJJJJ, BASE) with basepair # h;
  rightB__LLLLJLLJJJJJ = br(BASE, strong__LLLLJLLJJJJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLLLJLLJJJJJ = {weak__LLLLJLLJJJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLLLJLLJJJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  weak__LLLLLJLLJJJJJJ = iloop__LLLLLJLLJJJJJJ | leftB__LLLLLJLLJJJJJJ | stack__LLLLLJLLJJJJJJ | rightB__LLLLLJLLJJJJJJ # h;
  iloop__LLLLLJLLJJJJJJ = il(BASE, REGION with maxsize(30), strong__LLLLJLLJJJJJ, REGION with maxsize(30), BASE) with basepair # h;
  leftB__LLLLLJLLJJJJJJ = bl(BASE, REGION with maxsize(30), strong__LLLLLJLLJJJJJJ, BASE) with basepair # h;
  stack__LLLLLJLLJJJJJJ = sr(BASE, weak__LLLLLJLLJJJJJJ, BASE) with basepair # h;
  dangle__LLLLLJLLJJJJJJ = drem(LOC, strong__LLLLLJLLJJJJJJ,LOC) | edl(BASE, strong__LLLLLJLLJJJJJJ,LOC) | edr(LOC, strong__LLLLLJLLJJJJJJ,BASE) | edlr(BASE, strong__LLLLLJLLJJJJJJ,BASE) # h;
  rightB__LLLLLJLLJJJJJJ = br(BASE, strong__LLLLLJLLJJJJJJ, REGION with maxsize(30), BASE) with basepair # h;
  strong__LLLLLJLLJJJJJJ = {weak__LLLLLJLLJJJJJJ} with allowLonelyBasepairs(true) | {sr(BASE, weak__LLLLLJLLJJJJJJ, BASE) with basepair} with allowLonelyBasepairs(false) # h;
  struct__LLLLLJLLJJJJJJ = sadd(BASE, struct__LLLLLJLLJJJJJJ) | cadd(dangle__LLLLLJLLJJJJJJ, struct___) # h;
}


