# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/lib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/RNAalihishapes
pkgincludedir = $(includedir)/RNAalihishapes
pkglibdir = $(libdir)/RNAalihishapes
pkglibexecdir = $(libexecdir)/RNAalihishapes
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src/lib
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx_0x.m4 \
	$(top_srcdir)/m4/boost.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libRNA_a_AR = $(AR) $(ARFLAGS)
libRNA_a_LIBADD =
am_libRNA_a_OBJECTS = libRNA_a-dist_vars.$(OBJEXT) \
	libRNA_a-fold_vars.$(OBJEXT) libRNA_a-part_func.$(OBJEXT) \
	libRNA_a-read_epars.$(OBJEXT) libRNA_a-treedist.$(OBJEXT) \
	libRNA_a-energy_par.$(OBJEXT) libRNA_a-inverse.$(OBJEXT) \
	libRNA_a-ProfileDist.$(OBJEXT) libRNA_a-RNAstruct.$(OBJEXT) \
	libRNA_a-utils.$(OBJEXT) libRNA_a-fold.$(OBJEXT) \
	libRNA_a-naview.$(OBJEXT) libRNA_a-PS_dot.$(OBJEXT) \
	libRNA_a-stringdist.$(OBJEXT) libRNA_a-params.$(OBJEXT) \
	libRNA_a-subopt.$(OBJEXT) libRNA_a-list.$(OBJEXT) \
	libRNA_a-Lfold.$(OBJEXT) libRNA_a-cofold.$(OBJEXT) \
	libRNA_a-part_func_co.$(OBJEXT) libRNA_a-ProfileAln.$(OBJEXT) \
	libRNA_a-duplex.$(OBJEXT) libRNA_a-alifold.$(OBJEXT) \
	libRNA_a-alipfold.$(OBJEXT) libRNA_a-aln_util.$(OBJEXT) \
	libRNA_a-LPfold.$(OBJEXT) libRNA_a-part_func_up.$(OBJEXT) \
	libRNA_a-ribo.$(OBJEXT) libRNA_a-convert_epars.$(OBJEXT) \
	libRNA_a-MEA.$(OBJEXT) libRNA_a-aliLfold.$(OBJEXT) \
	libRNA_a-mm.$(OBJEXT) libRNA_a-2Dfold.$(OBJEXT) \
	libRNA_a-2Dpfold.$(OBJEXT) libRNA_a-plex_functions.$(OBJEXT) \
	libRNA_a-plot_layouts.$(OBJEXT) libRNA_a-ali_plex.$(OBJEXT) \
	libRNA_a-c_plex.$(OBJEXT) libRNA_a-plex.$(OBJEXT) \
	libRNA_a-snofold.$(OBJEXT) libRNA_a-snoop.$(OBJEXT) \
	libRNA_a-move_set.$(OBJEXT) libRNA_a-gquad.$(OBJEXT)
libRNA_a_OBJECTS = $(am_libRNA_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libRNA_a_SOURCES)
DIST_SOURCES = $(libRNA_a_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run automake-1.11
AWK = gawk
BOOST_CPPFLAGS = 
BOOST_DATE_TIME_LDFLAGS = -L/usr/local/lib -Wl,-R/usr/local/lib
BOOST_DATE_TIME_LDPATH = /usr/local/lib
BOOST_DATE_TIME_LIBS = -lboost_date_time
BOOST_LDPATH = /usr/local/lib
BOOST_PROGRAM_OPTIONS_LDFLAGS = -L/usr/local/lib -Wl,-R/usr/local/lib
BOOST_PROGRAM_OPTIONS_LDPATH = /usr/local/lib
BOOST_PROGRAM_OPTIONS_LIBS = -lboost_program_options
BOOST_ROOT = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FPIC = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = RNAalihishapes
PACKAGE_BUGREPORT = Jiabin Huang and Bjoern Voss <j.huang@uke.de, bjoern.voss@ibvt.uni-stuttgart.de>
PACKAGE_NAME = RNAalihishapes
PACKAGE_STRING = RNAalihishapes 1.2
PACKAGE_TARNAME = RNAalihishapes
PACKAGE_URL = 
PACKAGE_VERSION = 1.2
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.2
abs_builddir = /home/jhuang/RNAlihishapes/src/lib
abs_srcdir = /home/jhuang/RNAlihishapes/src/lib
abs_top_builddir = /home/jhuang/RNAlihishapes
abs_top_srcdir = /home/jhuang/RNAlihishapes
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = c++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jhuang/RNAlihishapes/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
lib_LIBRARIES = libRNA.a

#if WITH_LIBSVM
#  SVM_SRC     = ../@LIBSVM_DIR@/svm.cpp
#  SVM_INC     = -I${srcdir}/../@LIBSVM_DIR@
#  SVM_H       = ../@LIBSVM_DIR@/svm.h
#  SVM_UTILS   = svm_utils.c
#endif
libRNA_a_SOURCES = dist_vars.c fold_vars.c part_func.c read_epars.c\
                    treedist.c energy_par.c inverse.c ProfileDist.c \
                    RNAstruct.c utils.c fold.c naview.c PS_dot.c \
                    stringdist.c params.c subopt.c list.c Lfold.c \
                    cofold.c part_func_co.c ProfileAln.c duplex.c \
                    alifold.c alipfold.c aln_util.c LPfold.c \
                    part_func_up.c ribo.c convert_epars.c\
                    MEA.c aliLfold.c mm.c 2Dfold.c 2Dpfold.c plex_functions.c\
                    plot_layouts.c ali_plex.c c_plex.c plex.c snofold.c\
                    snoop.c move_set.c gquad.c

#${SVM_SRC} ${SVM_UTILS}
libRNA_a_CFLAGS = $(AM_CFLAGS) $(OPENMP_CFLAGS) 
noinst_HEADERS = intl11.h intl11dH.h intl21.h intl21dH.h \
                  intl22.h intl22dH.h list.h\
                  1.8.4_epars.h 1.8.4_intloops.h

EXTRA_DIST = circfold.inc alicircfold.inc model_avg.inc model_sd.inc
#${SVM_H}
AM_CPPFLAGS = -I$(srcdir)/../H 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/lib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(libdir)" && rm -f $$files

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libRNA.a: $(libRNA_a_OBJECTS) $(libRNA_a_DEPENDENCIES) 
	-rm -f libRNA.a
	$(libRNA_a_AR) libRNA.a $(libRNA_a_OBJECTS) $(libRNA_a_LIBADD)
	$(RANLIB) libRNA.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libRNA_a-2Dfold.Po
include ./$(DEPDIR)/libRNA_a-2Dpfold.Po
include ./$(DEPDIR)/libRNA_a-LPfold.Po
include ./$(DEPDIR)/libRNA_a-Lfold.Po
include ./$(DEPDIR)/libRNA_a-MEA.Po
include ./$(DEPDIR)/libRNA_a-PS_dot.Po
include ./$(DEPDIR)/libRNA_a-ProfileAln.Po
include ./$(DEPDIR)/libRNA_a-ProfileDist.Po
include ./$(DEPDIR)/libRNA_a-RNAstruct.Po
include ./$(DEPDIR)/libRNA_a-aliLfold.Po
include ./$(DEPDIR)/libRNA_a-ali_plex.Po
include ./$(DEPDIR)/libRNA_a-alifold.Po
include ./$(DEPDIR)/libRNA_a-alipfold.Po
include ./$(DEPDIR)/libRNA_a-aln_util.Po
include ./$(DEPDIR)/libRNA_a-c_plex.Po
include ./$(DEPDIR)/libRNA_a-cofold.Po
include ./$(DEPDIR)/libRNA_a-convert_epars.Po
include ./$(DEPDIR)/libRNA_a-dist_vars.Po
include ./$(DEPDIR)/libRNA_a-duplex.Po
include ./$(DEPDIR)/libRNA_a-energy_par.Po
include ./$(DEPDIR)/libRNA_a-fold.Po
include ./$(DEPDIR)/libRNA_a-fold_vars.Po
include ./$(DEPDIR)/libRNA_a-gquad.Po
include ./$(DEPDIR)/libRNA_a-inverse.Po
include ./$(DEPDIR)/libRNA_a-list.Po
include ./$(DEPDIR)/libRNA_a-mm.Po
include ./$(DEPDIR)/libRNA_a-move_set.Po
include ./$(DEPDIR)/libRNA_a-naview.Po
include ./$(DEPDIR)/libRNA_a-params.Po
include ./$(DEPDIR)/libRNA_a-part_func.Po
include ./$(DEPDIR)/libRNA_a-part_func_co.Po
include ./$(DEPDIR)/libRNA_a-part_func_up.Po
include ./$(DEPDIR)/libRNA_a-plex.Po
include ./$(DEPDIR)/libRNA_a-plex_functions.Po
include ./$(DEPDIR)/libRNA_a-plot_layouts.Po
include ./$(DEPDIR)/libRNA_a-read_epars.Po
include ./$(DEPDIR)/libRNA_a-ribo.Po
include ./$(DEPDIR)/libRNA_a-snofold.Po
include ./$(DEPDIR)/libRNA_a-snoop.Po
include ./$(DEPDIR)/libRNA_a-stringdist.Po
include ./$(DEPDIR)/libRNA_a-subopt.Po
include ./$(DEPDIR)/libRNA_a-treedist.Po
include ./$(DEPDIR)/libRNA_a-utils.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libRNA_a-dist_vars.o: dist_vars.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-dist_vars.o -MD -MP -MF $(DEPDIR)/libRNA_a-dist_vars.Tpo -c -o libRNA_a-dist_vars.o `test -f 'dist_vars.c' || echo '$(srcdir)/'`dist_vars.c
	$(am__mv) $(DEPDIR)/libRNA_a-dist_vars.Tpo $(DEPDIR)/libRNA_a-dist_vars.Po
#	source='dist_vars.c' object='libRNA_a-dist_vars.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-dist_vars.o `test -f 'dist_vars.c' || echo '$(srcdir)/'`dist_vars.c

libRNA_a-dist_vars.obj: dist_vars.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-dist_vars.obj -MD -MP -MF $(DEPDIR)/libRNA_a-dist_vars.Tpo -c -o libRNA_a-dist_vars.obj `if test -f 'dist_vars.c'; then $(CYGPATH_W) 'dist_vars.c'; else $(CYGPATH_W) '$(srcdir)/dist_vars.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-dist_vars.Tpo $(DEPDIR)/libRNA_a-dist_vars.Po
#	source='dist_vars.c' object='libRNA_a-dist_vars.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-dist_vars.obj `if test -f 'dist_vars.c'; then $(CYGPATH_W) 'dist_vars.c'; else $(CYGPATH_W) '$(srcdir)/dist_vars.c'; fi`

libRNA_a-fold_vars.o: fold_vars.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-fold_vars.o -MD -MP -MF $(DEPDIR)/libRNA_a-fold_vars.Tpo -c -o libRNA_a-fold_vars.o `test -f 'fold_vars.c' || echo '$(srcdir)/'`fold_vars.c
	$(am__mv) $(DEPDIR)/libRNA_a-fold_vars.Tpo $(DEPDIR)/libRNA_a-fold_vars.Po
#	source='fold_vars.c' object='libRNA_a-fold_vars.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-fold_vars.o `test -f 'fold_vars.c' || echo '$(srcdir)/'`fold_vars.c

libRNA_a-fold_vars.obj: fold_vars.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-fold_vars.obj -MD -MP -MF $(DEPDIR)/libRNA_a-fold_vars.Tpo -c -o libRNA_a-fold_vars.obj `if test -f 'fold_vars.c'; then $(CYGPATH_W) 'fold_vars.c'; else $(CYGPATH_W) '$(srcdir)/fold_vars.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-fold_vars.Tpo $(DEPDIR)/libRNA_a-fold_vars.Po
#	source='fold_vars.c' object='libRNA_a-fold_vars.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-fold_vars.obj `if test -f 'fold_vars.c'; then $(CYGPATH_W) 'fold_vars.c'; else $(CYGPATH_W) '$(srcdir)/fold_vars.c'; fi`

libRNA_a-part_func.o: part_func.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func.o -MD -MP -MF $(DEPDIR)/libRNA_a-part_func.Tpo -c -o libRNA_a-part_func.o `test -f 'part_func.c' || echo '$(srcdir)/'`part_func.c
	$(am__mv) $(DEPDIR)/libRNA_a-part_func.Tpo $(DEPDIR)/libRNA_a-part_func.Po
#	source='part_func.c' object='libRNA_a-part_func.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func.o `test -f 'part_func.c' || echo '$(srcdir)/'`part_func.c

libRNA_a-part_func.obj: part_func.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func.obj -MD -MP -MF $(DEPDIR)/libRNA_a-part_func.Tpo -c -o libRNA_a-part_func.obj `if test -f 'part_func.c'; then $(CYGPATH_W) 'part_func.c'; else $(CYGPATH_W) '$(srcdir)/part_func.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-part_func.Tpo $(DEPDIR)/libRNA_a-part_func.Po
#	source='part_func.c' object='libRNA_a-part_func.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func.obj `if test -f 'part_func.c'; then $(CYGPATH_W) 'part_func.c'; else $(CYGPATH_W) '$(srcdir)/part_func.c'; fi`

libRNA_a-read_epars.o: read_epars.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-read_epars.o -MD -MP -MF $(DEPDIR)/libRNA_a-read_epars.Tpo -c -o libRNA_a-read_epars.o `test -f 'read_epars.c' || echo '$(srcdir)/'`read_epars.c
	$(am__mv) $(DEPDIR)/libRNA_a-read_epars.Tpo $(DEPDIR)/libRNA_a-read_epars.Po
#	source='read_epars.c' object='libRNA_a-read_epars.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-read_epars.o `test -f 'read_epars.c' || echo '$(srcdir)/'`read_epars.c

libRNA_a-read_epars.obj: read_epars.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-read_epars.obj -MD -MP -MF $(DEPDIR)/libRNA_a-read_epars.Tpo -c -o libRNA_a-read_epars.obj `if test -f 'read_epars.c'; then $(CYGPATH_W) 'read_epars.c'; else $(CYGPATH_W) '$(srcdir)/read_epars.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-read_epars.Tpo $(DEPDIR)/libRNA_a-read_epars.Po
#	source='read_epars.c' object='libRNA_a-read_epars.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-read_epars.obj `if test -f 'read_epars.c'; then $(CYGPATH_W) 'read_epars.c'; else $(CYGPATH_W) '$(srcdir)/read_epars.c'; fi`

libRNA_a-treedist.o: treedist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-treedist.o -MD -MP -MF $(DEPDIR)/libRNA_a-treedist.Tpo -c -o libRNA_a-treedist.o `test -f 'treedist.c' || echo '$(srcdir)/'`treedist.c
	$(am__mv) $(DEPDIR)/libRNA_a-treedist.Tpo $(DEPDIR)/libRNA_a-treedist.Po
#	source='treedist.c' object='libRNA_a-treedist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-treedist.o `test -f 'treedist.c' || echo '$(srcdir)/'`treedist.c

libRNA_a-treedist.obj: treedist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-treedist.obj -MD -MP -MF $(DEPDIR)/libRNA_a-treedist.Tpo -c -o libRNA_a-treedist.obj `if test -f 'treedist.c'; then $(CYGPATH_W) 'treedist.c'; else $(CYGPATH_W) '$(srcdir)/treedist.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-treedist.Tpo $(DEPDIR)/libRNA_a-treedist.Po
#	source='treedist.c' object='libRNA_a-treedist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-treedist.obj `if test -f 'treedist.c'; then $(CYGPATH_W) 'treedist.c'; else $(CYGPATH_W) '$(srcdir)/treedist.c'; fi`

libRNA_a-energy_par.o: energy_par.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-energy_par.o -MD -MP -MF $(DEPDIR)/libRNA_a-energy_par.Tpo -c -o libRNA_a-energy_par.o `test -f 'energy_par.c' || echo '$(srcdir)/'`energy_par.c
	$(am__mv) $(DEPDIR)/libRNA_a-energy_par.Tpo $(DEPDIR)/libRNA_a-energy_par.Po
#	source='energy_par.c' object='libRNA_a-energy_par.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-energy_par.o `test -f 'energy_par.c' || echo '$(srcdir)/'`energy_par.c

libRNA_a-energy_par.obj: energy_par.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-energy_par.obj -MD -MP -MF $(DEPDIR)/libRNA_a-energy_par.Tpo -c -o libRNA_a-energy_par.obj `if test -f 'energy_par.c'; then $(CYGPATH_W) 'energy_par.c'; else $(CYGPATH_W) '$(srcdir)/energy_par.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-energy_par.Tpo $(DEPDIR)/libRNA_a-energy_par.Po
#	source='energy_par.c' object='libRNA_a-energy_par.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-energy_par.obj `if test -f 'energy_par.c'; then $(CYGPATH_W) 'energy_par.c'; else $(CYGPATH_W) '$(srcdir)/energy_par.c'; fi`

libRNA_a-inverse.o: inverse.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-inverse.o -MD -MP -MF $(DEPDIR)/libRNA_a-inverse.Tpo -c -o libRNA_a-inverse.o `test -f 'inverse.c' || echo '$(srcdir)/'`inverse.c
	$(am__mv) $(DEPDIR)/libRNA_a-inverse.Tpo $(DEPDIR)/libRNA_a-inverse.Po
#	source='inverse.c' object='libRNA_a-inverse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-inverse.o `test -f 'inverse.c' || echo '$(srcdir)/'`inverse.c

libRNA_a-inverse.obj: inverse.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-inverse.obj -MD -MP -MF $(DEPDIR)/libRNA_a-inverse.Tpo -c -o libRNA_a-inverse.obj `if test -f 'inverse.c'; then $(CYGPATH_W) 'inverse.c'; else $(CYGPATH_W) '$(srcdir)/inverse.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-inverse.Tpo $(DEPDIR)/libRNA_a-inverse.Po
#	source='inverse.c' object='libRNA_a-inverse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-inverse.obj `if test -f 'inverse.c'; then $(CYGPATH_W) 'inverse.c'; else $(CYGPATH_W) '$(srcdir)/inverse.c'; fi`

libRNA_a-ProfileDist.o: ProfileDist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ProfileDist.o -MD -MP -MF $(DEPDIR)/libRNA_a-ProfileDist.Tpo -c -o libRNA_a-ProfileDist.o `test -f 'ProfileDist.c' || echo '$(srcdir)/'`ProfileDist.c
	$(am__mv) $(DEPDIR)/libRNA_a-ProfileDist.Tpo $(DEPDIR)/libRNA_a-ProfileDist.Po
#	source='ProfileDist.c' object='libRNA_a-ProfileDist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ProfileDist.o `test -f 'ProfileDist.c' || echo '$(srcdir)/'`ProfileDist.c

libRNA_a-ProfileDist.obj: ProfileDist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ProfileDist.obj -MD -MP -MF $(DEPDIR)/libRNA_a-ProfileDist.Tpo -c -o libRNA_a-ProfileDist.obj `if test -f 'ProfileDist.c'; then $(CYGPATH_W) 'ProfileDist.c'; else $(CYGPATH_W) '$(srcdir)/ProfileDist.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-ProfileDist.Tpo $(DEPDIR)/libRNA_a-ProfileDist.Po
#	source='ProfileDist.c' object='libRNA_a-ProfileDist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ProfileDist.obj `if test -f 'ProfileDist.c'; then $(CYGPATH_W) 'ProfileDist.c'; else $(CYGPATH_W) '$(srcdir)/ProfileDist.c'; fi`

libRNA_a-RNAstruct.o: RNAstruct.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-RNAstruct.o -MD -MP -MF $(DEPDIR)/libRNA_a-RNAstruct.Tpo -c -o libRNA_a-RNAstruct.o `test -f 'RNAstruct.c' || echo '$(srcdir)/'`RNAstruct.c
	$(am__mv) $(DEPDIR)/libRNA_a-RNAstruct.Tpo $(DEPDIR)/libRNA_a-RNAstruct.Po
#	source='RNAstruct.c' object='libRNA_a-RNAstruct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-RNAstruct.o `test -f 'RNAstruct.c' || echo '$(srcdir)/'`RNAstruct.c

libRNA_a-RNAstruct.obj: RNAstruct.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-RNAstruct.obj -MD -MP -MF $(DEPDIR)/libRNA_a-RNAstruct.Tpo -c -o libRNA_a-RNAstruct.obj `if test -f 'RNAstruct.c'; then $(CYGPATH_W) 'RNAstruct.c'; else $(CYGPATH_W) '$(srcdir)/RNAstruct.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-RNAstruct.Tpo $(DEPDIR)/libRNA_a-RNAstruct.Po
#	source='RNAstruct.c' object='libRNA_a-RNAstruct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-RNAstruct.obj `if test -f 'RNAstruct.c'; then $(CYGPATH_W) 'RNAstruct.c'; else $(CYGPATH_W) '$(srcdir)/RNAstruct.c'; fi`

libRNA_a-utils.o: utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-utils.o -MD -MP -MF $(DEPDIR)/libRNA_a-utils.Tpo -c -o libRNA_a-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	$(am__mv) $(DEPDIR)/libRNA_a-utils.Tpo $(DEPDIR)/libRNA_a-utils.Po
#	source='utils.c' object='libRNA_a-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

libRNA_a-utils.obj: utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-utils.obj -MD -MP -MF $(DEPDIR)/libRNA_a-utils.Tpo -c -o libRNA_a-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-utils.Tpo $(DEPDIR)/libRNA_a-utils.Po
#	source='utils.c' object='libRNA_a-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

libRNA_a-fold.o: fold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-fold.o -MD -MP -MF $(DEPDIR)/libRNA_a-fold.Tpo -c -o libRNA_a-fold.o `test -f 'fold.c' || echo '$(srcdir)/'`fold.c
	$(am__mv) $(DEPDIR)/libRNA_a-fold.Tpo $(DEPDIR)/libRNA_a-fold.Po
#	source='fold.c' object='libRNA_a-fold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-fold.o `test -f 'fold.c' || echo '$(srcdir)/'`fold.c

libRNA_a-fold.obj: fold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-fold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-fold.Tpo -c -o libRNA_a-fold.obj `if test -f 'fold.c'; then $(CYGPATH_W) 'fold.c'; else $(CYGPATH_W) '$(srcdir)/fold.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-fold.Tpo $(DEPDIR)/libRNA_a-fold.Po
#	source='fold.c' object='libRNA_a-fold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-fold.obj `if test -f 'fold.c'; then $(CYGPATH_W) 'fold.c'; else $(CYGPATH_W) '$(srcdir)/fold.c'; fi`

libRNA_a-naview.o: naview.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-naview.o -MD -MP -MF $(DEPDIR)/libRNA_a-naview.Tpo -c -o libRNA_a-naview.o `test -f 'naview.c' || echo '$(srcdir)/'`naview.c
	$(am__mv) $(DEPDIR)/libRNA_a-naview.Tpo $(DEPDIR)/libRNA_a-naview.Po
#	source='naview.c' object='libRNA_a-naview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-naview.o `test -f 'naview.c' || echo '$(srcdir)/'`naview.c

libRNA_a-naview.obj: naview.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-naview.obj -MD -MP -MF $(DEPDIR)/libRNA_a-naview.Tpo -c -o libRNA_a-naview.obj `if test -f 'naview.c'; then $(CYGPATH_W) 'naview.c'; else $(CYGPATH_W) '$(srcdir)/naview.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-naview.Tpo $(DEPDIR)/libRNA_a-naview.Po
#	source='naview.c' object='libRNA_a-naview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-naview.obj `if test -f 'naview.c'; then $(CYGPATH_W) 'naview.c'; else $(CYGPATH_W) '$(srcdir)/naview.c'; fi`

libRNA_a-PS_dot.o: PS_dot.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-PS_dot.o -MD -MP -MF $(DEPDIR)/libRNA_a-PS_dot.Tpo -c -o libRNA_a-PS_dot.o `test -f 'PS_dot.c' || echo '$(srcdir)/'`PS_dot.c
	$(am__mv) $(DEPDIR)/libRNA_a-PS_dot.Tpo $(DEPDIR)/libRNA_a-PS_dot.Po
#	source='PS_dot.c' object='libRNA_a-PS_dot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-PS_dot.o `test -f 'PS_dot.c' || echo '$(srcdir)/'`PS_dot.c

libRNA_a-PS_dot.obj: PS_dot.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-PS_dot.obj -MD -MP -MF $(DEPDIR)/libRNA_a-PS_dot.Tpo -c -o libRNA_a-PS_dot.obj `if test -f 'PS_dot.c'; then $(CYGPATH_W) 'PS_dot.c'; else $(CYGPATH_W) '$(srcdir)/PS_dot.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-PS_dot.Tpo $(DEPDIR)/libRNA_a-PS_dot.Po
#	source='PS_dot.c' object='libRNA_a-PS_dot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-PS_dot.obj `if test -f 'PS_dot.c'; then $(CYGPATH_W) 'PS_dot.c'; else $(CYGPATH_W) '$(srcdir)/PS_dot.c'; fi`

libRNA_a-stringdist.o: stringdist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-stringdist.o -MD -MP -MF $(DEPDIR)/libRNA_a-stringdist.Tpo -c -o libRNA_a-stringdist.o `test -f 'stringdist.c' || echo '$(srcdir)/'`stringdist.c
	$(am__mv) $(DEPDIR)/libRNA_a-stringdist.Tpo $(DEPDIR)/libRNA_a-stringdist.Po
#	source='stringdist.c' object='libRNA_a-stringdist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-stringdist.o `test -f 'stringdist.c' || echo '$(srcdir)/'`stringdist.c

libRNA_a-stringdist.obj: stringdist.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-stringdist.obj -MD -MP -MF $(DEPDIR)/libRNA_a-stringdist.Tpo -c -o libRNA_a-stringdist.obj `if test -f 'stringdist.c'; then $(CYGPATH_W) 'stringdist.c'; else $(CYGPATH_W) '$(srcdir)/stringdist.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-stringdist.Tpo $(DEPDIR)/libRNA_a-stringdist.Po
#	source='stringdist.c' object='libRNA_a-stringdist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-stringdist.obj `if test -f 'stringdist.c'; then $(CYGPATH_W) 'stringdist.c'; else $(CYGPATH_W) '$(srcdir)/stringdist.c'; fi`

libRNA_a-params.o: params.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-params.o -MD -MP -MF $(DEPDIR)/libRNA_a-params.Tpo -c -o libRNA_a-params.o `test -f 'params.c' || echo '$(srcdir)/'`params.c
	$(am__mv) $(DEPDIR)/libRNA_a-params.Tpo $(DEPDIR)/libRNA_a-params.Po
#	source='params.c' object='libRNA_a-params.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-params.o `test -f 'params.c' || echo '$(srcdir)/'`params.c

libRNA_a-params.obj: params.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-params.obj -MD -MP -MF $(DEPDIR)/libRNA_a-params.Tpo -c -o libRNA_a-params.obj `if test -f 'params.c'; then $(CYGPATH_W) 'params.c'; else $(CYGPATH_W) '$(srcdir)/params.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-params.Tpo $(DEPDIR)/libRNA_a-params.Po
#	source='params.c' object='libRNA_a-params.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-params.obj `if test -f 'params.c'; then $(CYGPATH_W) 'params.c'; else $(CYGPATH_W) '$(srcdir)/params.c'; fi`

libRNA_a-subopt.o: subopt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-subopt.o -MD -MP -MF $(DEPDIR)/libRNA_a-subopt.Tpo -c -o libRNA_a-subopt.o `test -f 'subopt.c' || echo '$(srcdir)/'`subopt.c
	$(am__mv) $(DEPDIR)/libRNA_a-subopt.Tpo $(DEPDIR)/libRNA_a-subopt.Po
#	source='subopt.c' object='libRNA_a-subopt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-subopt.o `test -f 'subopt.c' || echo '$(srcdir)/'`subopt.c

libRNA_a-subopt.obj: subopt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-subopt.obj -MD -MP -MF $(DEPDIR)/libRNA_a-subopt.Tpo -c -o libRNA_a-subopt.obj `if test -f 'subopt.c'; then $(CYGPATH_W) 'subopt.c'; else $(CYGPATH_W) '$(srcdir)/subopt.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-subopt.Tpo $(DEPDIR)/libRNA_a-subopt.Po
#	source='subopt.c' object='libRNA_a-subopt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-subopt.obj `if test -f 'subopt.c'; then $(CYGPATH_W) 'subopt.c'; else $(CYGPATH_W) '$(srcdir)/subopt.c'; fi`

libRNA_a-list.o: list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-list.o -MD -MP -MF $(DEPDIR)/libRNA_a-list.Tpo -c -o libRNA_a-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c
	$(am__mv) $(DEPDIR)/libRNA_a-list.Tpo $(DEPDIR)/libRNA_a-list.Po
#	source='list.c' object='libRNA_a-list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c

libRNA_a-list.obj: list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-list.obj -MD -MP -MF $(DEPDIR)/libRNA_a-list.Tpo -c -o libRNA_a-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-list.Tpo $(DEPDIR)/libRNA_a-list.Po
#	source='list.c' object='libRNA_a-list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`

libRNA_a-Lfold.o: Lfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-Lfold.o -MD -MP -MF $(DEPDIR)/libRNA_a-Lfold.Tpo -c -o libRNA_a-Lfold.o `test -f 'Lfold.c' || echo '$(srcdir)/'`Lfold.c
	$(am__mv) $(DEPDIR)/libRNA_a-Lfold.Tpo $(DEPDIR)/libRNA_a-Lfold.Po
#	source='Lfold.c' object='libRNA_a-Lfold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-Lfold.o `test -f 'Lfold.c' || echo '$(srcdir)/'`Lfold.c

libRNA_a-Lfold.obj: Lfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-Lfold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-Lfold.Tpo -c -o libRNA_a-Lfold.obj `if test -f 'Lfold.c'; then $(CYGPATH_W) 'Lfold.c'; else $(CYGPATH_W) '$(srcdir)/Lfold.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-Lfold.Tpo $(DEPDIR)/libRNA_a-Lfold.Po
#	source='Lfold.c' object='libRNA_a-Lfold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-Lfold.obj `if test -f 'Lfold.c'; then $(CYGPATH_W) 'Lfold.c'; else $(CYGPATH_W) '$(srcdir)/Lfold.c'; fi`

libRNA_a-cofold.o: cofold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-cofold.o -MD -MP -MF $(DEPDIR)/libRNA_a-cofold.Tpo -c -o libRNA_a-cofold.o `test -f 'cofold.c' || echo '$(srcdir)/'`cofold.c
	$(am__mv) $(DEPDIR)/libRNA_a-cofold.Tpo $(DEPDIR)/libRNA_a-cofold.Po
#	source='cofold.c' object='libRNA_a-cofold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-cofold.o `test -f 'cofold.c' || echo '$(srcdir)/'`cofold.c

libRNA_a-cofold.obj: cofold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-cofold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-cofold.Tpo -c -o libRNA_a-cofold.obj `if test -f 'cofold.c'; then $(CYGPATH_W) 'cofold.c'; else $(CYGPATH_W) '$(srcdir)/cofold.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-cofold.Tpo $(DEPDIR)/libRNA_a-cofold.Po
#	source='cofold.c' object='libRNA_a-cofold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-cofold.obj `if test -f 'cofold.c'; then $(CYGPATH_W) 'cofold.c'; else $(CYGPATH_W) '$(srcdir)/cofold.c'; fi`

libRNA_a-part_func_co.o: part_func_co.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func_co.o -MD -MP -MF $(DEPDIR)/libRNA_a-part_func_co.Tpo -c -o libRNA_a-part_func_co.o `test -f 'part_func_co.c' || echo '$(srcdir)/'`part_func_co.c
	$(am__mv) $(DEPDIR)/libRNA_a-part_func_co.Tpo $(DEPDIR)/libRNA_a-part_func_co.Po
#	source='part_func_co.c' object='libRNA_a-part_func_co.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func_co.o `test -f 'part_func_co.c' || echo '$(srcdir)/'`part_func_co.c

libRNA_a-part_func_co.obj: part_func_co.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func_co.obj -MD -MP -MF $(DEPDIR)/libRNA_a-part_func_co.Tpo -c -o libRNA_a-part_func_co.obj `if test -f 'part_func_co.c'; then $(CYGPATH_W) 'part_func_co.c'; else $(CYGPATH_W) '$(srcdir)/part_func_co.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-part_func_co.Tpo $(DEPDIR)/libRNA_a-part_func_co.Po
#	source='part_func_co.c' object='libRNA_a-part_func_co.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func_co.obj `if test -f 'part_func_co.c'; then $(CYGPATH_W) 'part_func_co.c'; else $(CYGPATH_W) '$(srcdir)/part_func_co.c'; fi`

libRNA_a-ProfileAln.o: ProfileAln.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ProfileAln.o -MD -MP -MF $(DEPDIR)/libRNA_a-ProfileAln.Tpo -c -o libRNA_a-ProfileAln.o `test -f 'ProfileAln.c' || echo '$(srcdir)/'`ProfileAln.c
	$(am__mv) $(DEPDIR)/libRNA_a-ProfileAln.Tpo $(DEPDIR)/libRNA_a-ProfileAln.Po
#	source='ProfileAln.c' object='libRNA_a-ProfileAln.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ProfileAln.o `test -f 'ProfileAln.c' || echo '$(srcdir)/'`ProfileAln.c

libRNA_a-ProfileAln.obj: ProfileAln.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ProfileAln.obj -MD -MP -MF $(DEPDIR)/libRNA_a-ProfileAln.Tpo -c -o libRNA_a-ProfileAln.obj `if test -f 'ProfileAln.c'; then $(CYGPATH_W) 'ProfileAln.c'; else $(CYGPATH_W) '$(srcdir)/ProfileAln.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-ProfileAln.Tpo $(DEPDIR)/libRNA_a-ProfileAln.Po
#	source='ProfileAln.c' object='libRNA_a-ProfileAln.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ProfileAln.obj `if test -f 'ProfileAln.c'; then $(CYGPATH_W) 'ProfileAln.c'; else $(CYGPATH_W) '$(srcdir)/ProfileAln.c'; fi`

libRNA_a-duplex.o: duplex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-duplex.o -MD -MP -MF $(DEPDIR)/libRNA_a-duplex.Tpo -c -o libRNA_a-duplex.o `test -f 'duplex.c' || echo '$(srcdir)/'`duplex.c
	$(am__mv) $(DEPDIR)/libRNA_a-duplex.Tpo $(DEPDIR)/libRNA_a-duplex.Po
#	source='duplex.c' object='libRNA_a-duplex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-duplex.o `test -f 'duplex.c' || echo '$(srcdir)/'`duplex.c

libRNA_a-duplex.obj: duplex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-duplex.obj -MD -MP -MF $(DEPDIR)/libRNA_a-duplex.Tpo -c -o libRNA_a-duplex.obj `if test -f 'duplex.c'; then $(CYGPATH_W) 'duplex.c'; else $(CYGPATH_W) '$(srcdir)/duplex.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-duplex.Tpo $(DEPDIR)/libRNA_a-duplex.Po
#	source='duplex.c' object='libRNA_a-duplex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-duplex.obj `if test -f 'duplex.c'; then $(CYGPATH_W) 'duplex.c'; else $(CYGPATH_W) '$(srcdir)/duplex.c'; fi`

libRNA_a-alifold.o: alifold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-alifold.o -MD -MP -MF $(DEPDIR)/libRNA_a-alifold.Tpo -c -o libRNA_a-alifold.o `test -f 'alifold.c' || echo '$(srcdir)/'`alifold.c
	$(am__mv) $(DEPDIR)/libRNA_a-alifold.Tpo $(DEPDIR)/libRNA_a-alifold.Po
#	source='alifold.c' object='libRNA_a-alifold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-alifold.o `test -f 'alifold.c' || echo '$(srcdir)/'`alifold.c

libRNA_a-alifold.obj: alifold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-alifold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-alifold.Tpo -c -o libRNA_a-alifold.obj `if test -f 'alifold.c'; then $(CYGPATH_W) 'alifold.c'; else $(CYGPATH_W) '$(srcdir)/alifold.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-alifold.Tpo $(DEPDIR)/libRNA_a-alifold.Po
#	source='alifold.c' object='libRNA_a-alifold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-alifold.obj `if test -f 'alifold.c'; then $(CYGPATH_W) 'alifold.c'; else $(CYGPATH_W) '$(srcdir)/alifold.c'; fi`

libRNA_a-alipfold.o: alipfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-alipfold.o -MD -MP -MF $(DEPDIR)/libRNA_a-alipfold.Tpo -c -o libRNA_a-alipfold.o `test -f 'alipfold.c' || echo '$(srcdir)/'`alipfold.c
	$(am__mv) $(DEPDIR)/libRNA_a-alipfold.Tpo $(DEPDIR)/libRNA_a-alipfold.Po
#	source='alipfold.c' object='libRNA_a-alipfold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-alipfold.o `test -f 'alipfold.c' || echo '$(srcdir)/'`alipfold.c

libRNA_a-alipfold.obj: alipfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-alipfold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-alipfold.Tpo -c -o libRNA_a-alipfold.obj `if test -f 'alipfold.c'; then $(CYGPATH_W) 'alipfold.c'; else $(CYGPATH_W) '$(srcdir)/alipfold.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-alipfold.Tpo $(DEPDIR)/libRNA_a-alipfold.Po
#	source='alipfold.c' object='libRNA_a-alipfold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-alipfold.obj `if test -f 'alipfold.c'; then $(CYGPATH_W) 'alipfold.c'; else $(CYGPATH_W) '$(srcdir)/alipfold.c'; fi`

libRNA_a-aln_util.o: aln_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-aln_util.o -MD -MP -MF $(DEPDIR)/libRNA_a-aln_util.Tpo -c -o libRNA_a-aln_util.o `test -f 'aln_util.c' || echo '$(srcdir)/'`aln_util.c
	$(am__mv) $(DEPDIR)/libRNA_a-aln_util.Tpo $(DEPDIR)/libRNA_a-aln_util.Po
#	source='aln_util.c' object='libRNA_a-aln_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-aln_util.o `test -f 'aln_util.c' || echo '$(srcdir)/'`aln_util.c

libRNA_a-aln_util.obj: aln_util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-aln_util.obj -MD -MP -MF $(DEPDIR)/libRNA_a-aln_util.Tpo -c -o libRNA_a-aln_util.obj `if test -f 'aln_util.c'; then $(CYGPATH_W) 'aln_util.c'; else $(CYGPATH_W) '$(srcdir)/aln_util.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-aln_util.Tpo $(DEPDIR)/libRNA_a-aln_util.Po
#	source='aln_util.c' object='libRNA_a-aln_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-aln_util.obj `if test -f 'aln_util.c'; then $(CYGPATH_W) 'aln_util.c'; else $(CYGPATH_W) '$(srcdir)/aln_util.c'; fi`

libRNA_a-LPfold.o: LPfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-LPfold.o -MD -MP -MF $(DEPDIR)/libRNA_a-LPfold.Tpo -c -o libRNA_a-LPfold.o `test -f 'LPfold.c' || echo '$(srcdir)/'`LPfold.c
	$(am__mv) $(DEPDIR)/libRNA_a-LPfold.Tpo $(DEPDIR)/libRNA_a-LPfold.Po
#	source='LPfold.c' object='libRNA_a-LPfold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-LPfold.o `test -f 'LPfold.c' || echo '$(srcdir)/'`LPfold.c

libRNA_a-LPfold.obj: LPfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-LPfold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-LPfold.Tpo -c -o libRNA_a-LPfold.obj `if test -f 'LPfold.c'; then $(CYGPATH_W) 'LPfold.c'; else $(CYGPATH_W) '$(srcdir)/LPfold.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-LPfold.Tpo $(DEPDIR)/libRNA_a-LPfold.Po
#	source='LPfold.c' object='libRNA_a-LPfold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-LPfold.obj `if test -f 'LPfold.c'; then $(CYGPATH_W) 'LPfold.c'; else $(CYGPATH_W) '$(srcdir)/LPfold.c'; fi`

libRNA_a-part_func_up.o: part_func_up.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func_up.o -MD -MP -MF $(DEPDIR)/libRNA_a-part_func_up.Tpo -c -o libRNA_a-part_func_up.o `test -f 'part_func_up.c' || echo '$(srcdir)/'`part_func_up.c
	$(am__mv) $(DEPDIR)/libRNA_a-part_func_up.Tpo $(DEPDIR)/libRNA_a-part_func_up.Po
#	source='part_func_up.c' object='libRNA_a-part_func_up.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func_up.o `test -f 'part_func_up.c' || echo '$(srcdir)/'`part_func_up.c

libRNA_a-part_func_up.obj: part_func_up.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-part_func_up.obj -MD -MP -MF $(DEPDIR)/libRNA_a-part_func_up.Tpo -c -o libRNA_a-part_func_up.obj `if test -f 'part_func_up.c'; then $(CYGPATH_W) 'part_func_up.c'; else $(CYGPATH_W) '$(srcdir)/part_func_up.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-part_func_up.Tpo $(DEPDIR)/libRNA_a-part_func_up.Po
#	source='part_func_up.c' object='libRNA_a-part_func_up.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-part_func_up.obj `if test -f 'part_func_up.c'; then $(CYGPATH_W) 'part_func_up.c'; else $(CYGPATH_W) '$(srcdir)/part_func_up.c'; fi`

libRNA_a-ribo.o: ribo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ribo.o -MD -MP -MF $(DEPDIR)/libRNA_a-ribo.Tpo -c -o libRNA_a-ribo.o `test -f 'ribo.c' || echo '$(srcdir)/'`ribo.c
	$(am__mv) $(DEPDIR)/libRNA_a-ribo.Tpo $(DEPDIR)/libRNA_a-ribo.Po
#	source='ribo.c' object='libRNA_a-ribo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ribo.o `test -f 'ribo.c' || echo '$(srcdir)/'`ribo.c

libRNA_a-ribo.obj: ribo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ribo.obj -MD -MP -MF $(DEPDIR)/libRNA_a-ribo.Tpo -c -o libRNA_a-ribo.obj `if test -f 'ribo.c'; then $(CYGPATH_W) 'ribo.c'; else $(CYGPATH_W) '$(srcdir)/ribo.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-ribo.Tpo $(DEPDIR)/libRNA_a-ribo.Po
#	source='ribo.c' object='libRNA_a-ribo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ribo.obj `if test -f 'ribo.c'; then $(CYGPATH_W) 'ribo.c'; else $(CYGPATH_W) '$(srcdir)/ribo.c'; fi`

libRNA_a-convert_epars.o: convert_epars.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-convert_epars.o -MD -MP -MF $(DEPDIR)/libRNA_a-convert_epars.Tpo -c -o libRNA_a-convert_epars.o `test -f 'convert_epars.c' || echo '$(srcdir)/'`convert_epars.c
	$(am__mv) $(DEPDIR)/libRNA_a-convert_epars.Tpo $(DEPDIR)/libRNA_a-convert_epars.Po
#	source='convert_epars.c' object='libRNA_a-convert_epars.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-convert_epars.o `test -f 'convert_epars.c' || echo '$(srcdir)/'`convert_epars.c

libRNA_a-convert_epars.obj: convert_epars.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-convert_epars.obj -MD -MP -MF $(DEPDIR)/libRNA_a-convert_epars.Tpo -c -o libRNA_a-convert_epars.obj `if test -f 'convert_epars.c'; then $(CYGPATH_W) 'convert_epars.c'; else $(CYGPATH_W) '$(srcdir)/convert_epars.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-convert_epars.Tpo $(DEPDIR)/libRNA_a-convert_epars.Po
#	source='convert_epars.c' object='libRNA_a-convert_epars.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-convert_epars.obj `if test -f 'convert_epars.c'; then $(CYGPATH_W) 'convert_epars.c'; else $(CYGPATH_W) '$(srcdir)/convert_epars.c'; fi`

libRNA_a-MEA.o: MEA.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-MEA.o -MD -MP -MF $(DEPDIR)/libRNA_a-MEA.Tpo -c -o libRNA_a-MEA.o `test -f 'MEA.c' || echo '$(srcdir)/'`MEA.c
	$(am__mv) $(DEPDIR)/libRNA_a-MEA.Tpo $(DEPDIR)/libRNA_a-MEA.Po
#	source='MEA.c' object='libRNA_a-MEA.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-MEA.o `test -f 'MEA.c' || echo '$(srcdir)/'`MEA.c

libRNA_a-MEA.obj: MEA.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-MEA.obj -MD -MP -MF $(DEPDIR)/libRNA_a-MEA.Tpo -c -o libRNA_a-MEA.obj `if test -f 'MEA.c'; then $(CYGPATH_W) 'MEA.c'; else $(CYGPATH_W) '$(srcdir)/MEA.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-MEA.Tpo $(DEPDIR)/libRNA_a-MEA.Po
#	source='MEA.c' object='libRNA_a-MEA.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-MEA.obj `if test -f 'MEA.c'; then $(CYGPATH_W) 'MEA.c'; else $(CYGPATH_W) '$(srcdir)/MEA.c'; fi`

libRNA_a-aliLfold.o: aliLfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-aliLfold.o -MD -MP -MF $(DEPDIR)/libRNA_a-aliLfold.Tpo -c -o libRNA_a-aliLfold.o `test -f 'aliLfold.c' || echo '$(srcdir)/'`aliLfold.c
	$(am__mv) $(DEPDIR)/libRNA_a-aliLfold.Tpo $(DEPDIR)/libRNA_a-aliLfold.Po
#	source='aliLfold.c' object='libRNA_a-aliLfold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-aliLfold.o `test -f 'aliLfold.c' || echo '$(srcdir)/'`aliLfold.c

libRNA_a-aliLfold.obj: aliLfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-aliLfold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-aliLfold.Tpo -c -o libRNA_a-aliLfold.obj `if test -f 'aliLfold.c'; then $(CYGPATH_W) 'aliLfold.c'; else $(CYGPATH_W) '$(srcdir)/aliLfold.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-aliLfold.Tpo $(DEPDIR)/libRNA_a-aliLfold.Po
#	source='aliLfold.c' object='libRNA_a-aliLfold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-aliLfold.obj `if test -f 'aliLfold.c'; then $(CYGPATH_W) 'aliLfold.c'; else $(CYGPATH_W) '$(srcdir)/aliLfold.c'; fi`

libRNA_a-mm.o: mm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-mm.o -MD -MP -MF $(DEPDIR)/libRNA_a-mm.Tpo -c -o libRNA_a-mm.o `test -f 'mm.c' || echo '$(srcdir)/'`mm.c
	$(am__mv) $(DEPDIR)/libRNA_a-mm.Tpo $(DEPDIR)/libRNA_a-mm.Po
#	source='mm.c' object='libRNA_a-mm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-mm.o `test -f 'mm.c' || echo '$(srcdir)/'`mm.c

libRNA_a-mm.obj: mm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-mm.obj -MD -MP -MF $(DEPDIR)/libRNA_a-mm.Tpo -c -o libRNA_a-mm.obj `if test -f 'mm.c'; then $(CYGPATH_W) 'mm.c'; else $(CYGPATH_W) '$(srcdir)/mm.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-mm.Tpo $(DEPDIR)/libRNA_a-mm.Po
#	source='mm.c' object='libRNA_a-mm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-mm.obj `if test -f 'mm.c'; then $(CYGPATH_W) 'mm.c'; else $(CYGPATH_W) '$(srcdir)/mm.c'; fi`

libRNA_a-2Dfold.o: 2Dfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-2Dfold.o -MD -MP -MF $(DEPDIR)/libRNA_a-2Dfold.Tpo -c -o libRNA_a-2Dfold.o `test -f '2Dfold.c' || echo '$(srcdir)/'`2Dfold.c
	$(am__mv) $(DEPDIR)/libRNA_a-2Dfold.Tpo $(DEPDIR)/libRNA_a-2Dfold.Po
#	source='2Dfold.c' object='libRNA_a-2Dfold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-2Dfold.o `test -f '2Dfold.c' || echo '$(srcdir)/'`2Dfold.c

libRNA_a-2Dfold.obj: 2Dfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-2Dfold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-2Dfold.Tpo -c -o libRNA_a-2Dfold.obj `if test -f '2Dfold.c'; then $(CYGPATH_W) '2Dfold.c'; else $(CYGPATH_W) '$(srcdir)/2Dfold.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-2Dfold.Tpo $(DEPDIR)/libRNA_a-2Dfold.Po
#	source='2Dfold.c' object='libRNA_a-2Dfold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-2Dfold.obj `if test -f '2Dfold.c'; then $(CYGPATH_W) '2Dfold.c'; else $(CYGPATH_W) '$(srcdir)/2Dfold.c'; fi`

libRNA_a-2Dpfold.o: 2Dpfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-2Dpfold.o -MD -MP -MF $(DEPDIR)/libRNA_a-2Dpfold.Tpo -c -o libRNA_a-2Dpfold.o `test -f '2Dpfold.c' || echo '$(srcdir)/'`2Dpfold.c
	$(am__mv) $(DEPDIR)/libRNA_a-2Dpfold.Tpo $(DEPDIR)/libRNA_a-2Dpfold.Po
#	source='2Dpfold.c' object='libRNA_a-2Dpfold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-2Dpfold.o `test -f '2Dpfold.c' || echo '$(srcdir)/'`2Dpfold.c

libRNA_a-2Dpfold.obj: 2Dpfold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-2Dpfold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-2Dpfold.Tpo -c -o libRNA_a-2Dpfold.obj `if test -f '2Dpfold.c'; then $(CYGPATH_W) '2Dpfold.c'; else $(CYGPATH_W) '$(srcdir)/2Dpfold.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-2Dpfold.Tpo $(DEPDIR)/libRNA_a-2Dpfold.Po
#	source='2Dpfold.c' object='libRNA_a-2Dpfold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-2Dpfold.obj `if test -f '2Dpfold.c'; then $(CYGPATH_W) '2Dpfold.c'; else $(CYGPATH_W) '$(srcdir)/2Dpfold.c'; fi`

libRNA_a-plex_functions.o: plex_functions.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-plex_functions.o -MD -MP -MF $(DEPDIR)/libRNA_a-plex_functions.Tpo -c -o libRNA_a-plex_functions.o `test -f 'plex_functions.c' || echo '$(srcdir)/'`plex_functions.c
	$(am__mv) $(DEPDIR)/libRNA_a-plex_functions.Tpo $(DEPDIR)/libRNA_a-plex_functions.Po
#	source='plex_functions.c' object='libRNA_a-plex_functions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-plex_functions.o `test -f 'plex_functions.c' || echo '$(srcdir)/'`plex_functions.c

libRNA_a-plex_functions.obj: plex_functions.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-plex_functions.obj -MD -MP -MF $(DEPDIR)/libRNA_a-plex_functions.Tpo -c -o libRNA_a-plex_functions.obj `if test -f 'plex_functions.c'; then $(CYGPATH_W) 'plex_functions.c'; else $(CYGPATH_W) '$(srcdir)/plex_functions.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-plex_functions.Tpo $(DEPDIR)/libRNA_a-plex_functions.Po
#	source='plex_functions.c' object='libRNA_a-plex_functions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-plex_functions.obj `if test -f 'plex_functions.c'; then $(CYGPATH_W) 'plex_functions.c'; else $(CYGPATH_W) '$(srcdir)/plex_functions.c'; fi`

libRNA_a-plot_layouts.o: plot_layouts.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-plot_layouts.o -MD -MP -MF $(DEPDIR)/libRNA_a-plot_layouts.Tpo -c -o libRNA_a-plot_layouts.o `test -f 'plot_layouts.c' || echo '$(srcdir)/'`plot_layouts.c
	$(am__mv) $(DEPDIR)/libRNA_a-plot_layouts.Tpo $(DEPDIR)/libRNA_a-plot_layouts.Po
#	source='plot_layouts.c' object='libRNA_a-plot_layouts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-plot_layouts.o `test -f 'plot_layouts.c' || echo '$(srcdir)/'`plot_layouts.c

libRNA_a-plot_layouts.obj: plot_layouts.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-plot_layouts.obj -MD -MP -MF $(DEPDIR)/libRNA_a-plot_layouts.Tpo -c -o libRNA_a-plot_layouts.obj `if test -f 'plot_layouts.c'; then $(CYGPATH_W) 'plot_layouts.c'; else $(CYGPATH_W) '$(srcdir)/plot_layouts.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-plot_layouts.Tpo $(DEPDIR)/libRNA_a-plot_layouts.Po
#	source='plot_layouts.c' object='libRNA_a-plot_layouts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-plot_layouts.obj `if test -f 'plot_layouts.c'; then $(CYGPATH_W) 'plot_layouts.c'; else $(CYGPATH_W) '$(srcdir)/plot_layouts.c'; fi`

libRNA_a-ali_plex.o: ali_plex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ali_plex.o -MD -MP -MF $(DEPDIR)/libRNA_a-ali_plex.Tpo -c -o libRNA_a-ali_plex.o `test -f 'ali_plex.c' || echo '$(srcdir)/'`ali_plex.c
	$(am__mv) $(DEPDIR)/libRNA_a-ali_plex.Tpo $(DEPDIR)/libRNA_a-ali_plex.Po
#	source='ali_plex.c' object='libRNA_a-ali_plex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ali_plex.o `test -f 'ali_plex.c' || echo '$(srcdir)/'`ali_plex.c

libRNA_a-ali_plex.obj: ali_plex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-ali_plex.obj -MD -MP -MF $(DEPDIR)/libRNA_a-ali_plex.Tpo -c -o libRNA_a-ali_plex.obj `if test -f 'ali_plex.c'; then $(CYGPATH_W) 'ali_plex.c'; else $(CYGPATH_W) '$(srcdir)/ali_plex.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-ali_plex.Tpo $(DEPDIR)/libRNA_a-ali_plex.Po
#	source='ali_plex.c' object='libRNA_a-ali_plex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-ali_plex.obj `if test -f 'ali_plex.c'; then $(CYGPATH_W) 'ali_plex.c'; else $(CYGPATH_W) '$(srcdir)/ali_plex.c'; fi`

libRNA_a-c_plex.o: c_plex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-c_plex.o -MD -MP -MF $(DEPDIR)/libRNA_a-c_plex.Tpo -c -o libRNA_a-c_plex.o `test -f 'c_plex.c' || echo '$(srcdir)/'`c_plex.c
	$(am__mv) $(DEPDIR)/libRNA_a-c_plex.Tpo $(DEPDIR)/libRNA_a-c_plex.Po
#	source='c_plex.c' object='libRNA_a-c_plex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-c_plex.o `test -f 'c_plex.c' || echo '$(srcdir)/'`c_plex.c

libRNA_a-c_plex.obj: c_plex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-c_plex.obj -MD -MP -MF $(DEPDIR)/libRNA_a-c_plex.Tpo -c -o libRNA_a-c_plex.obj `if test -f 'c_plex.c'; then $(CYGPATH_W) 'c_plex.c'; else $(CYGPATH_W) '$(srcdir)/c_plex.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-c_plex.Tpo $(DEPDIR)/libRNA_a-c_plex.Po
#	source='c_plex.c' object='libRNA_a-c_plex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-c_plex.obj `if test -f 'c_plex.c'; then $(CYGPATH_W) 'c_plex.c'; else $(CYGPATH_W) '$(srcdir)/c_plex.c'; fi`

libRNA_a-plex.o: plex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-plex.o -MD -MP -MF $(DEPDIR)/libRNA_a-plex.Tpo -c -o libRNA_a-plex.o `test -f 'plex.c' || echo '$(srcdir)/'`plex.c
	$(am__mv) $(DEPDIR)/libRNA_a-plex.Tpo $(DEPDIR)/libRNA_a-plex.Po
#	source='plex.c' object='libRNA_a-plex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-plex.o `test -f 'plex.c' || echo '$(srcdir)/'`plex.c

libRNA_a-plex.obj: plex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-plex.obj -MD -MP -MF $(DEPDIR)/libRNA_a-plex.Tpo -c -o libRNA_a-plex.obj `if test -f 'plex.c'; then $(CYGPATH_W) 'plex.c'; else $(CYGPATH_W) '$(srcdir)/plex.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-plex.Tpo $(DEPDIR)/libRNA_a-plex.Po
#	source='plex.c' object='libRNA_a-plex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-plex.obj `if test -f 'plex.c'; then $(CYGPATH_W) 'plex.c'; else $(CYGPATH_W) '$(srcdir)/plex.c'; fi`

libRNA_a-snofold.o: snofold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-snofold.o -MD -MP -MF $(DEPDIR)/libRNA_a-snofold.Tpo -c -o libRNA_a-snofold.o `test -f 'snofold.c' || echo '$(srcdir)/'`snofold.c
	$(am__mv) $(DEPDIR)/libRNA_a-snofold.Tpo $(DEPDIR)/libRNA_a-snofold.Po
#	source='snofold.c' object='libRNA_a-snofold.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-snofold.o `test -f 'snofold.c' || echo '$(srcdir)/'`snofold.c

libRNA_a-snofold.obj: snofold.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-snofold.obj -MD -MP -MF $(DEPDIR)/libRNA_a-snofold.Tpo -c -o libRNA_a-snofold.obj `if test -f 'snofold.c'; then $(CYGPATH_W) 'snofold.c'; else $(CYGPATH_W) '$(srcdir)/snofold.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-snofold.Tpo $(DEPDIR)/libRNA_a-snofold.Po
#	source='snofold.c' object='libRNA_a-snofold.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-snofold.obj `if test -f 'snofold.c'; then $(CYGPATH_W) 'snofold.c'; else $(CYGPATH_W) '$(srcdir)/snofold.c'; fi`

libRNA_a-snoop.o: snoop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-snoop.o -MD -MP -MF $(DEPDIR)/libRNA_a-snoop.Tpo -c -o libRNA_a-snoop.o `test -f 'snoop.c' || echo '$(srcdir)/'`snoop.c
	$(am__mv) $(DEPDIR)/libRNA_a-snoop.Tpo $(DEPDIR)/libRNA_a-snoop.Po
#	source='snoop.c' object='libRNA_a-snoop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-snoop.o `test -f 'snoop.c' || echo '$(srcdir)/'`snoop.c

libRNA_a-snoop.obj: snoop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-snoop.obj -MD -MP -MF $(DEPDIR)/libRNA_a-snoop.Tpo -c -o libRNA_a-snoop.obj `if test -f 'snoop.c'; then $(CYGPATH_W) 'snoop.c'; else $(CYGPATH_W) '$(srcdir)/snoop.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-snoop.Tpo $(DEPDIR)/libRNA_a-snoop.Po
#	source='snoop.c' object='libRNA_a-snoop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-snoop.obj `if test -f 'snoop.c'; then $(CYGPATH_W) 'snoop.c'; else $(CYGPATH_W) '$(srcdir)/snoop.c'; fi`

libRNA_a-move_set.o: move_set.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-move_set.o -MD -MP -MF $(DEPDIR)/libRNA_a-move_set.Tpo -c -o libRNA_a-move_set.o `test -f 'move_set.c' || echo '$(srcdir)/'`move_set.c
	$(am__mv) $(DEPDIR)/libRNA_a-move_set.Tpo $(DEPDIR)/libRNA_a-move_set.Po
#	source='move_set.c' object='libRNA_a-move_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-move_set.o `test -f 'move_set.c' || echo '$(srcdir)/'`move_set.c

libRNA_a-move_set.obj: move_set.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-move_set.obj -MD -MP -MF $(DEPDIR)/libRNA_a-move_set.Tpo -c -o libRNA_a-move_set.obj `if test -f 'move_set.c'; then $(CYGPATH_W) 'move_set.c'; else $(CYGPATH_W) '$(srcdir)/move_set.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-move_set.Tpo $(DEPDIR)/libRNA_a-move_set.Po
#	source='move_set.c' object='libRNA_a-move_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-move_set.obj `if test -f 'move_set.c'; then $(CYGPATH_W) 'move_set.c'; else $(CYGPATH_W) '$(srcdir)/move_set.c'; fi`

libRNA_a-gquad.o: gquad.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-gquad.o -MD -MP -MF $(DEPDIR)/libRNA_a-gquad.Tpo -c -o libRNA_a-gquad.o `test -f 'gquad.c' || echo '$(srcdir)/'`gquad.c
	$(am__mv) $(DEPDIR)/libRNA_a-gquad.Tpo $(DEPDIR)/libRNA_a-gquad.Po
#	source='gquad.c' object='libRNA_a-gquad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-gquad.o `test -f 'gquad.c' || echo '$(srcdir)/'`gquad.c

libRNA_a-gquad.obj: gquad.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -MT libRNA_a-gquad.obj -MD -MP -MF $(DEPDIR)/libRNA_a-gquad.Tpo -c -o libRNA_a-gquad.obj `if test -f 'gquad.c'; then $(CYGPATH_W) 'gquad.c'; else $(CYGPATH_W) '$(srcdir)/gquad.c'; fi`
	$(am__mv) $(DEPDIR)/libRNA_a-gquad.Tpo $(DEPDIR)/libRNA_a-gquad.Po
#	source='gquad.c' object='libRNA_a-gquad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libRNA_a_CFLAGS) $(CFLAGS) -c -o libRNA_a-gquad.obj `if test -f 'gquad.c'; then $(CYGPATH_W) 'gquad.c'; else $(CYGPATH_W) '$(srcdir)/gquad.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLIBRARIES

#${SVM_INC}

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
