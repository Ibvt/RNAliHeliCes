# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/RNAalihishapes
pkgincludedir = $(includedir)/RNAalihishapes
pkglibdir = $(libdir)/RNAalihishapes
pkglibexecdir = $(libexecdir)/RNAalihishapes
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = RNAalihishapes$(EXEEXT) RNAalihipath$(EXEEXT)
subdir = src
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx_0x.m4 \
	$(top_srcdir)/m4/boost.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_RNAalihipath_OBJECTS = RNAalihipath-rnaalihipath.$(OBJEXT) \
	RNAalihipath-eval_microstate.$(OBJEXT) \
	RNAalihipath-probs_h_microstate.$(OBJEXT) \
	RNAalihipath-probs_hplus_microstate.$(OBJEXT) \
	RNAalihipath-probs_m_microstate.$(OBJEXT) \
	RNAalihipath-probs_a_microstate.$(OBJEXT) \
	RNAalihipath-string.$(OBJEXT)
RNAalihipath_OBJECTS = $(am_RNAalihipath_OBJECTS)
am__DEPENDENCIES_1 =
RNAalihipath_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(srcdir)/lib/libRNA.a librna/librna.la
RNAalihipath_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(RNAalihipath_LDFLAGS) $(LDFLAGS) -o $@
am_RNAalihishapes_OBJECTS = RNAalihishapes-rnaalihishapes.$(OBJEXT) \
	RNAalihishapes-pfall_microstate.$(OBJEXT) \
	RNAalihishapes-rep_consensus.$(OBJEXT) \
	RNAalihishapes-probs_h_microstate.$(OBJEXT) \
	RNAalihishapes-probs_hplus_microstate.$(OBJEXT) \
	RNAalihishapes-probs_m_microstate.$(OBJEXT) \
	RNAalihishapes-probs_a_microstate.$(OBJEXT) \
	RNAalihishapes-string.$(OBJEXT)
RNAalihishapes_OBJECTS = $(am_RNAalihishapes_OBJECTS)
RNAalihishapes_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(srcdir)/lib/libRNA.a librna/librna.la
RNAalihishapes_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(RNAalihishapes_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(RNAalihipath_SOURCES) $(RNAalihishapes_SOURCES)
DIST_SOURCES = $(RNAalihipath_SOURCES) $(RNAalihishapes_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run automake-1.11
AWK = gawk
BOOST_CPPFLAGS = 
BOOST_DATE_TIME_LDFLAGS = -L/usr/local/lib -Wl,-R/usr/local/lib
BOOST_DATE_TIME_LDPATH = /usr/local/lib
BOOST_DATE_TIME_LIBS = -lboost_date_time
BOOST_LDPATH = /usr/local/lib
BOOST_PROGRAM_OPTIONS_LDFLAGS = -L/usr/local/lib -Wl,-R/usr/local/lib
BOOST_PROGRAM_OPTIONS_LDPATH = /usr/local/lib
BOOST_PROGRAM_OPTIONS_LIBS = -lboost_program_options
BOOST_ROOT = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = c++
CXXCPP = c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FPIC = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jhuang/RNAlihishapes/config/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = RNAalihishapes
PACKAGE_BUGREPORT = Jiabin Huang and Bjoern Voss <j.huang@uke.de, bjoern.voss@ibvt.uni-stuttgart.de>
PACKAGE_NAME = RNAalihishapes
PACKAGE_STRING = RNAalihishapes 1.2
PACKAGE_TARNAME = RNAalihishapes
PACKAGE_URL = 
PACKAGE_VERSION = 1.2
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.2
abs_builddir = /home/jhuang/RNAlihishapes/src
abs_srcdir = /home/jhuang/RNAlihishapes/src
abs_top_builddir = /home/jhuang/RNAlihishapes
abs_top_srcdir = /home/jhuang/RNAlihishapes
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = c++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jhuang/RNAlihishapes/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

#libs
SUBDIRS = H lib librna
AM_CPPFLAGS = -I$(srcdir)/rtlib -I$(srcdir)/librna

#filter_add.hh mfe_answer_v4.hh hishape_filter.hh
RNAalihishapes_SOURCES = rnaalihishapes.cc \
                     pfall_microstate.cc pfall_microstate.hh \
                     rep_consensus.cc rep_consensus.hh \
                     probs_h_microstate.cc probs_h_microstate.hh \
                     probs_hplus_microstate.cc probs_hplus_microstate.hh \
                     probs_m_microstate.cc probs_m_microstate.hh \
                     probs_a_microstate.cc probs_a_microstate.hh \
                     rtlib/string.cc rtlib/string.hh

RNAalihishapes_CPPFLAGS = $(BOOST_CPPFLAGS) $(AM_CPPFLAGS)
RNAalihishapes_LDFLAGS = $(BOOST_DATE_TIME_LDFLAGS) $(BOOST_PROGRAM_OPTIONS_LDFLAGS)
RNAalihishapes_LDADD = $(BOOST_DATE_TIME_LIBS) $(BOOST_PROGRAM_OPTIONS_LIBS) $(srcdir)/lib/libRNA.a librna/librna.la 

# RNAHeliCes_SOURCES = main.cc filter_add.hh \
#                      mfe_answer_v4.hh hishape_filter.hh \
#                      hishapeh_mfeV4_pp.cc hishapeh_mfeV4_pp.hh \
#                      hishapehplus_mfeV4_pp.cc hishapehplus_mfeV4_pp.hh \
#                      hishapem_mfeV4_pp.cc hishapem_mfeV4_pp.hh \
#                      hishapeb_mfeV4_pp.cc hishapeb_mfeV4_pp.hh \
#                      pf_answer.hh pf_filter.hh mfe_answer.hh p_func.cc p_func.hh \
#                      hishapeh_mfe_pfx.cc hishapeh_mfe_pfx.hh \
#                      hishapehplus_mfe_pfx.cc hishapehplus_mfe_pfx.hh \
#                      hishapem_mfe_pfx.cc hishapem_mfe_pfx.hh \
#                      hishapeb_mfe_pfx.cc hishapeb_mfe_pfx.hh
# 
# RNAHeliCes_CPPFLAGS = $(BOOST_CPPFLAGS) $(AM_CPPFLAGS)
# RNAHeliCes_LDFLAGS = $(BOOST_DATE_TIME_LDFLAGS) $(BOOST_PROGRAM_OPTIONS_LDFLAGS)
# RNAHeliCes_LDADD = $(BOOST_DATE_TIME_LIBS) $(BOOST_PROGRAM_OPTIONS_LIBS) librna/librna.la rtlib/rtlib.la comp/comp.la
# 

#hited_util.hh hited_util.cc mfe_answer.hh
RNAalihipath_SOURCES = rnaalihipath.cc \
                     eval_microstate.cc eval_microstate.hh \
                     probs_h_microstate.cc probs_h_microstate.hh \
                     probs_hplus_microstate.cc probs_hplus_microstate.hh \
                     probs_m_microstate.cc probs_m_microstate.hh \
                     probs_a_microstate.cc probs_a_microstate.hh \
                     rtlib/string.cc rtlib/string.hh

#-I$(srcdir)/rtlib -I$(srcdir)/librna
RNAalihipath_CPPFLAGS = $(BOOST_CPPFLAGS) $(AM_CPPFLAGS) -DWITH_RNAOPTIONS
RNAalihipath_LDFLAGS = $(BOOST_DATE_TIME_LDFLAGS) $(BOOST_PROGRAM_OPTIONS_LDFLAGS)
RNAalihipath_LDADD = $(BOOST_DATE_TIME_LIBS) $(BOOST_PROGRAM_OPTIONS_LIBS) $(srcdir)/lib/libRNA.a librna/librna.la -lm

# eval_microstate_SOURCES = eval_microstate_main.cc \
#                      eval_microstate.cc eval_microstate.hh \
#                      rtlib/string.cc rtlib/string.hh
# #$(CXX) -MMD -MP $(CPPFLAGS) $(CXXFLAGS) -DWITH_RNAOPTIONS $< -c -o $@ \
# #         && $(SED) -e 's/[^ ]\+boost[^ \n]\+//' $*.d > _t && mv _t $*.d
# eval_microstate_CPPFLAGS = $(AM_CPPFLAGS) -DWITH_RNAOPTIONS
# eval_microstate_LDFLAGS = 
# eval_microstate_LDADD = librna/librna.la -lm

# eval_microstate_orig_SOURCES = eval_microstate_main_orig.cc \
#                      eval_microstate_orig.cc eval_microstate_orig.hh \
#                      rtlib/string.cc rtlib/string.hh
# eval_microstate_orig_CPPFLAGS = $(AM_CPPFLAGS) -DWITH_RNAOPTIONS
# eval_microstate_orig_LDFLAGS = 
# eval_microstate_orig_LDADD = librna/librna.la -lm

# 
# 
# BFSPath_SOURCES = bfspath.cc mfe_answer.hh \
#                      hishapeh_mfe_pp.cc hishapeh_mfe_pp.hh \
#                      hishapehplus_mfe_pp.cc hishapehplus_mfe_pp.hh \
#                      hishapem_mfe_pp.cc hishapem_mfe_pp.hh \
#                      hishapeb_mfe_pp.cc hishapeb_mfe_pp.hh
# BFSPath_CPPFLAGS = $(BOOST_CPPFLAGS) -I$(srcdir)/rtlib -I$(srcdir)/librna
# BFSPath_LDFLAGS = $(BOOST_DATE_TIME_LDFLAGS) $(BOOST_PROGRAM_OPTIONS_LDFLAGS)
# BFSPath_LDADD = $(BOOST_DATE_TIME_LIBS) $(BOOST_PROGRAM_OPTIONS_LIBS) $(srcdir)/libs/libRNA.a librna/librna.la rtlib/rtlib.la

#      Extensions/shapes.hh  
EXTRA_DIST = ShowTree ShowTree.opt.rb tree.rb LibChangeLog Extensions/alifold.hh    Extensions/bpfilter.hh  Extensions/mfesubopt.hh \
             Extensions/pknot_enforce.hh  Extensions/pknot_shape.hh  Extensions/probabilities.hh        Extensions/rnaoptions.hh \
                   Extensions/typesRNAfolding.hh  Extensions/alignment.hh  Extensions/evalfold.hh  Extensions/outside.hh \
             Extensions/pknot_extras.hh   Extensions/pknot_stems.hh  Extensions/rnaoptions_defaults.hh  Extensions/rules.hh  Extensions/singlefold.hh \
                   rtlib/adp.hh          rtlib/bigint.hh   rtlib/erase.hh         rtlib/hashlist.hh     rtlib/output.hh     rtlib/ref.hh    rtlib/sample.hh            rtlib/table.hh \
                   rtlib/algebra.hh      rtlib/bitops.hh   rtlib/filter.hh        rtlib/hash_stats.hh     rtlib/pool.hh       rtlib/rna.hh    rtlib/sequence.hh        rtlib/terminal.hh \
                   rtlib/asymptotics.hh  rtlib/cm_alph.hh  rtlib/hashtng.hh     rtlib/map_pool.hh   rtlib/push_back.hh  rtlib/rope.hh   rtlib/shape.hh  rtlib/shape_alph.hh        rtlib/treelist.hh \
                   rtlib/backtrack.hh    rtlib/cstr.h      rtlib/generic_opts.hh  rtlib/list.hh        rtlib/move.hh       rtlib/range.hh     rtlib/subopt.hh      rtlib/vector_sparse.hh \
                   rtlib/bench.hh        rtlib/empty.hh    rtlib/hash.hh          rtlib/multipool.hh  rtlib/rational.hh   rtlib/rules.hh  rtlib/singleton.hh   rtlib/subsequence.hh

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
RNAalihipath$(EXEEXT): $(RNAalihipath_OBJECTS) $(RNAalihipath_DEPENDENCIES) 
	@rm -f RNAalihipath$(EXEEXT)
	$(RNAalihipath_LINK) $(RNAalihipath_OBJECTS) $(RNAalihipath_LDADD) $(LIBS)
RNAalihishapes$(EXEEXT): $(RNAalihishapes_OBJECTS) $(RNAalihishapes_DEPENDENCIES) 
	@rm -f RNAalihishapes$(EXEEXT)
	$(RNAalihishapes_LINK) $(RNAalihishapes_OBJECTS) $(RNAalihishapes_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/RNAalihipath-eval_microstate.Po
include ./$(DEPDIR)/RNAalihipath-probs_a_microstate.Po
include ./$(DEPDIR)/RNAalihipath-probs_h_microstate.Po
include ./$(DEPDIR)/RNAalihipath-probs_hplus_microstate.Po
include ./$(DEPDIR)/RNAalihipath-probs_m_microstate.Po
include ./$(DEPDIR)/RNAalihipath-rnaalihipath.Po
include ./$(DEPDIR)/RNAalihipath-string.Po
include ./$(DEPDIR)/RNAalihishapes-pfall_microstate.Po
include ./$(DEPDIR)/RNAalihishapes-probs_a_microstate.Po
include ./$(DEPDIR)/RNAalihishapes-probs_h_microstate.Po
include ./$(DEPDIR)/RNAalihishapes-probs_hplus_microstate.Po
include ./$(DEPDIR)/RNAalihishapes-probs_m_microstate.Po
include ./$(DEPDIR)/RNAalihishapes-rep_consensus.Po
include ./$(DEPDIR)/RNAalihishapes-rnaalihishapes.Po
include ./$(DEPDIR)/RNAalihishapes-string.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

RNAalihipath-rnaalihipath.o: rnaalihipath.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-rnaalihipath.o -MD -MP -MF $(DEPDIR)/RNAalihipath-rnaalihipath.Tpo -c -o RNAalihipath-rnaalihipath.o `test -f 'rnaalihipath.cc' || echo '$(srcdir)/'`rnaalihipath.cc
	$(am__mv) $(DEPDIR)/RNAalihipath-rnaalihipath.Tpo $(DEPDIR)/RNAalihipath-rnaalihipath.Po
#	source='rnaalihipath.cc' object='RNAalihipath-rnaalihipath.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-rnaalihipath.o `test -f 'rnaalihipath.cc' || echo '$(srcdir)/'`rnaalihipath.cc

RNAalihipath-rnaalihipath.obj: rnaalihipath.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-rnaalihipath.obj -MD -MP -MF $(DEPDIR)/RNAalihipath-rnaalihipath.Tpo -c -o RNAalihipath-rnaalihipath.obj `if test -f 'rnaalihipath.cc'; then $(CYGPATH_W) 'rnaalihipath.cc'; else $(CYGPATH_W) '$(srcdir)/rnaalihipath.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihipath-rnaalihipath.Tpo $(DEPDIR)/RNAalihipath-rnaalihipath.Po
#	source='rnaalihipath.cc' object='RNAalihipath-rnaalihipath.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-rnaalihipath.obj `if test -f 'rnaalihipath.cc'; then $(CYGPATH_W) 'rnaalihipath.cc'; else $(CYGPATH_W) '$(srcdir)/rnaalihipath.cc'; fi`

RNAalihipath-eval_microstate.o: eval_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-eval_microstate.o -MD -MP -MF $(DEPDIR)/RNAalihipath-eval_microstate.Tpo -c -o RNAalihipath-eval_microstate.o `test -f 'eval_microstate.cc' || echo '$(srcdir)/'`eval_microstate.cc
	$(am__mv) $(DEPDIR)/RNAalihipath-eval_microstate.Tpo $(DEPDIR)/RNAalihipath-eval_microstate.Po
#	source='eval_microstate.cc' object='RNAalihipath-eval_microstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-eval_microstate.o `test -f 'eval_microstate.cc' || echo '$(srcdir)/'`eval_microstate.cc

RNAalihipath-eval_microstate.obj: eval_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-eval_microstate.obj -MD -MP -MF $(DEPDIR)/RNAalihipath-eval_microstate.Tpo -c -o RNAalihipath-eval_microstate.obj `if test -f 'eval_microstate.cc'; then $(CYGPATH_W) 'eval_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/eval_microstate.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihipath-eval_microstate.Tpo $(DEPDIR)/RNAalihipath-eval_microstate.Po
#	source='eval_microstate.cc' object='RNAalihipath-eval_microstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-eval_microstate.obj `if test -f 'eval_microstate.cc'; then $(CYGPATH_W) 'eval_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/eval_microstate.cc'; fi`

RNAalihipath-probs_h_microstate.o: probs_h_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-probs_h_microstate.o -MD -MP -MF $(DEPDIR)/RNAalihipath-probs_h_microstate.Tpo -c -o RNAalihipath-probs_h_microstate.o `test -f 'probs_h_microstate.cc' || echo '$(srcdir)/'`probs_h_microstate.cc
	$(am__mv) $(DEPDIR)/RNAalihipath-probs_h_microstate.Tpo $(DEPDIR)/RNAalihipath-probs_h_microstate.Po
#	source='probs_h_microstate.cc' object='RNAalihipath-probs_h_microstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-probs_h_microstate.o `test -f 'probs_h_microstate.cc' || echo '$(srcdir)/'`probs_h_microstate.cc

RNAalihipath-probs_h_microstate.obj: probs_h_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-probs_h_microstate.obj -MD -MP -MF $(DEPDIR)/RNAalihipath-probs_h_microstate.Tpo -c -o RNAalihipath-probs_h_microstate.obj `if test -f 'probs_h_microstate.cc'; then $(CYGPATH_W) 'probs_h_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_h_microstate.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihipath-probs_h_microstate.Tpo $(DEPDIR)/RNAalihipath-probs_h_microstate.Po
#	source='probs_h_microstate.cc' object='RNAalihipath-probs_h_microstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-probs_h_microstate.obj `if test -f 'probs_h_microstate.cc'; then $(CYGPATH_W) 'probs_h_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_h_microstate.cc'; fi`

RNAalihipath-probs_hplus_microstate.o: probs_hplus_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-probs_hplus_microstate.o -MD -MP -MF $(DEPDIR)/RNAalihipath-probs_hplus_microstate.Tpo -c -o RNAalihipath-probs_hplus_microstate.o `test -f 'probs_hplus_microstate.cc' || echo '$(srcdir)/'`probs_hplus_microstate.cc
	$(am__mv) $(DEPDIR)/RNAalihipath-probs_hplus_microstate.Tpo $(DEPDIR)/RNAalihipath-probs_hplus_microstate.Po
#	source='probs_hplus_microstate.cc' object='RNAalihipath-probs_hplus_microstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-probs_hplus_microstate.o `test -f 'probs_hplus_microstate.cc' || echo '$(srcdir)/'`probs_hplus_microstate.cc

RNAalihipath-probs_hplus_microstate.obj: probs_hplus_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-probs_hplus_microstate.obj -MD -MP -MF $(DEPDIR)/RNAalihipath-probs_hplus_microstate.Tpo -c -o RNAalihipath-probs_hplus_microstate.obj `if test -f 'probs_hplus_microstate.cc'; then $(CYGPATH_W) 'probs_hplus_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_hplus_microstate.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihipath-probs_hplus_microstate.Tpo $(DEPDIR)/RNAalihipath-probs_hplus_microstate.Po
#	source='probs_hplus_microstate.cc' object='RNAalihipath-probs_hplus_microstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-probs_hplus_microstate.obj `if test -f 'probs_hplus_microstate.cc'; then $(CYGPATH_W) 'probs_hplus_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_hplus_microstate.cc'; fi`

RNAalihipath-probs_m_microstate.o: probs_m_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-probs_m_microstate.o -MD -MP -MF $(DEPDIR)/RNAalihipath-probs_m_microstate.Tpo -c -o RNAalihipath-probs_m_microstate.o `test -f 'probs_m_microstate.cc' || echo '$(srcdir)/'`probs_m_microstate.cc
	$(am__mv) $(DEPDIR)/RNAalihipath-probs_m_microstate.Tpo $(DEPDIR)/RNAalihipath-probs_m_microstate.Po
#	source='probs_m_microstate.cc' object='RNAalihipath-probs_m_microstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-probs_m_microstate.o `test -f 'probs_m_microstate.cc' || echo '$(srcdir)/'`probs_m_microstate.cc

RNAalihipath-probs_m_microstate.obj: probs_m_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-probs_m_microstate.obj -MD -MP -MF $(DEPDIR)/RNAalihipath-probs_m_microstate.Tpo -c -o RNAalihipath-probs_m_microstate.obj `if test -f 'probs_m_microstate.cc'; then $(CYGPATH_W) 'probs_m_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_m_microstate.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihipath-probs_m_microstate.Tpo $(DEPDIR)/RNAalihipath-probs_m_microstate.Po
#	source='probs_m_microstate.cc' object='RNAalihipath-probs_m_microstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-probs_m_microstate.obj `if test -f 'probs_m_microstate.cc'; then $(CYGPATH_W) 'probs_m_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_m_microstate.cc'; fi`

RNAalihipath-probs_a_microstate.o: probs_a_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-probs_a_microstate.o -MD -MP -MF $(DEPDIR)/RNAalihipath-probs_a_microstate.Tpo -c -o RNAalihipath-probs_a_microstate.o `test -f 'probs_a_microstate.cc' || echo '$(srcdir)/'`probs_a_microstate.cc
	$(am__mv) $(DEPDIR)/RNAalihipath-probs_a_microstate.Tpo $(DEPDIR)/RNAalihipath-probs_a_microstate.Po
#	source='probs_a_microstate.cc' object='RNAalihipath-probs_a_microstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-probs_a_microstate.o `test -f 'probs_a_microstate.cc' || echo '$(srcdir)/'`probs_a_microstate.cc

RNAalihipath-probs_a_microstate.obj: probs_a_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-probs_a_microstate.obj -MD -MP -MF $(DEPDIR)/RNAalihipath-probs_a_microstate.Tpo -c -o RNAalihipath-probs_a_microstate.obj `if test -f 'probs_a_microstate.cc'; then $(CYGPATH_W) 'probs_a_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_a_microstate.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihipath-probs_a_microstate.Tpo $(DEPDIR)/RNAalihipath-probs_a_microstate.Po
#	source='probs_a_microstate.cc' object='RNAalihipath-probs_a_microstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-probs_a_microstate.obj `if test -f 'probs_a_microstate.cc'; then $(CYGPATH_W) 'probs_a_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_a_microstate.cc'; fi`

RNAalihipath-string.o: rtlib/string.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-string.o -MD -MP -MF $(DEPDIR)/RNAalihipath-string.Tpo -c -o RNAalihipath-string.o `test -f 'rtlib/string.cc' || echo '$(srcdir)/'`rtlib/string.cc
	$(am__mv) $(DEPDIR)/RNAalihipath-string.Tpo $(DEPDIR)/RNAalihipath-string.Po
#	source='rtlib/string.cc' object='RNAalihipath-string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-string.o `test -f 'rtlib/string.cc' || echo '$(srcdir)/'`rtlib/string.cc

RNAalihipath-string.obj: rtlib/string.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihipath-string.obj -MD -MP -MF $(DEPDIR)/RNAalihipath-string.Tpo -c -o RNAalihipath-string.obj `if test -f 'rtlib/string.cc'; then $(CYGPATH_W) 'rtlib/string.cc'; else $(CYGPATH_W) '$(srcdir)/rtlib/string.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihipath-string.Tpo $(DEPDIR)/RNAalihipath-string.Po
#	source='rtlib/string.cc' object='RNAalihipath-string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihipath_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihipath-string.obj `if test -f 'rtlib/string.cc'; then $(CYGPATH_W) 'rtlib/string.cc'; else $(CYGPATH_W) '$(srcdir)/rtlib/string.cc'; fi`

RNAalihishapes-rnaalihishapes.o: rnaalihishapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-rnaalihishapes.o -MD -MP -MF $(DEPDIR)/RNAalihishapes-rnaalihishapes.Tpo -c -o RNAalihishapes-rnaalihishapes.o `test -f 'rnaalihishapes.cc' || echo '$(srcdir)/'`rnaalihishapes.cc
	$(am__mv) $(DEPDIR)/RNAalihishapes-rnaalihishapes.Tpo $(DEPDIR)/RNAalihishapes-rnaalihishapes.Po
#	source='rnaalihishapes.cc' object='RNAalihishapes-rnaalihishapes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-rnaalihishapes.o `test -f 'rnaalihishapes.cc' || echo '$(srcdir)/'`rnaalihishapes.cc

RNAalihishapes-rnaalihishapes.obj: rnaalihishapes.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-rnaalihishapes.obj -MD -MP -MF $(DEPDIR)/RNAalihishapes-rnaalihishapes.Tpo -c -o RNAalihishapes-rnaalihishapes.obj `if test -f 'rnaalihishapes.cc'; then $(CYGPATH_W) 'rnaalihishapes.cc'; else $(CYGPATH_W) '$(srcdir)/rnaalihishapes.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihishapes-rnaalihishapes.Tpo $(DEPDIR)/RNAalihishapes-rnaalihishapes.Po
#	source='rnaalihishapes.cc' object='RNAalihishapes-rnaalihishapes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-rnaalihishapes.obj `if test -f 'rnaalihishapes.cc'; then $(CYGPATH_W) 'rnaalihishapes.cc'; else $(CYGPATH_W) '$(srcdir)/rnaalihishapes.cc'; fi`

RNAalihishapes-pfall_microstate.o: pfall_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-pfall_microstate.o -MD -MP -MF $(DEPDIR)/RNAalihishapes-pfall_microstate.Tpo -c -o RNAalihishapes-pfall_microstate.o `test -f 'pfall_microstate.cc' || echo '$(srcdir)/'`pfall_microstate.cc
	$(am__mv) $(DEPDIR)/RNAalihishapes-pfall_microstate.Tpo $(DEPDIR)/RNAalihishapes-pfall_microstate.Po
#	source='pfall_microstate.cc' object='RNAalihishapes-pfall_microstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-pfall_microstate.o `test -f 'pfall_microstate.cc' || echo '$(srcdir)/'`pfall_microstate.cc

RNAalihishapes-pfall_microstate.obj: pfall_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-pfall_microstate.obj -MD -MP -MF $(DEPDIR)/RNAalihishapes-pfall_microstate.Tpo -c -o RNAalihishapes-pfall_microstate.obj `if test -f 'pfall_microstate.cc'; then $(CYGPATH_W) 'pfall_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/pfall_microstate.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihishapes-pfall_microstate.Tpo $(DEPDIR)/RNAalihishapes-pfall_microstate.Po
#	source='pfall_microstate.cc' object='RNAalihishapes-pfall_microstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-pfall_microstate.obj `if test -f 'pfall_microstate.cc'; then $(CYGPATH_W) 'pfall_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/pfall_microstate.cc'; fi`

RNAalihishapes-rep_consensus.o: rep_consensus.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-rep_consensus.o -MD -MP -MF $(DEPDIR)/RNAalihishapes-rep_consensus.Tpo -c -o RNAalihishapes-rep_consensus.o `test -f 'rep_consensus.cc' || echo '$(srcdir)/'`rep_consensus.cc
	$(am__mv) $(DEPDIR)/RNAalihishapes-rep_consensus.Tpo $(DEPDIR)/RNAalihishapes-rep_consensus.Po
#	source='rep_consensus.cc' object='RNAalihishapes-rep_consensus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-rep_consensus.o `test -f 'rep_consensus.cc' || echo '$(srcdir)/'`rep_consensus.cc

RNAalihishapes-rep_consensus.obj: rep_consensus.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-rep_consensus.obj -MD -MP -MF $(DEPDIR)/RNAalihishapes-rep_consensus.Tpo -c -o RNAalihishapes-rep_consensus.obj `if test -f 'rep_consensus.cc'; then $(CYGPATH_W) 'rep_consensus.cc'; else $(CYGPATH_W) '$(srcdir)/rep_consensus.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihishapes-rep_consensus.Tpo $(DEPDIR)/RNAalihishapes-rep_consensus.Po
#	source='rep_consensus.cc' object='RNAalihishapes-rep_consensus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-rep_consensus.obj `if test -f 'rep_consensus.cc'; then $(CYGPATH_W) 'rep_consensus.cc'; else $(CYGPATH_W) '$(srcdir)/rep_consensus.cc'; fi`

RNAalihishapes-probs_h_microstate.o: probs_h_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-probs_h_microstate.o -MD -MP -MF $(DEPDIR)/RNAalihishapes-probs_h_microstate.Tpo -c -o RNAalihishapes-probs_h_microstate.o `test -f 'probs_h_microstate.cc' || echo '$(srcdir)/'`probs_h_microstate.cc
	$(am__mv) $(DEPDIR)/RNAalihishapes-probs_h_microstate.Tpo $(DEPDIR)/RNAalihishapes-probs_h_microstate.Po
#	source='probs_h_microstate.cc' object='RNAalihishapes-probs_h_microstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-probs_h_microstate.o `test -f 'probs_h_microstate.cc' || echo '$(srcdir)/'`probs_h_microstate.cc

RNAalihishapes-probs_h_microstate.obj: probs_h_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-probs_h_microstate.obj -MD -MP -MF $(DEPDIR)/RNAalihishapes-probs_h_microstate.Tpo -c -o RNAalihishapes-probs_h_microstate.obj `if test -f 'probs_h_microstate.cc'; then $(CYGPATH_W) 'probs_h_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_h_microstate.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihishapes-probs_h_microstate.Tpo $(DEPDIR)/RNAalihishapes-probs_h_microstate.Po
#	source='probs_h_microstate.cc' object='RNAalihishapes-probs_h_microstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-probs_h_microstate.obj `if test -f 'probs_h_microstate.cc'; then $(CYGPATH_W) 'probs_h_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_h_microstate.cc'; fi`

RNAalihishapes-probs_hplus_microstate.o: probs_hplus_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-probs_hplus_microstate.o -MD -MP -MF $(DEPDIR)/RNAalihishapes-probs_hplus_microstate.Tpo -c -o RNAalihishapes-probs_hplus_microstate.o `test -f 'probs_hplus_microstate.cc' || echo '$(srcdir)/'`probs_hplus_microstate.cc
	$(am__mv) $(DEPDIR)/RNAalihishapes-probs_hplus_microstate.Tpo $(DEPDIR)/RNAalihishapes-probs_hplus_microstate.Po
#	source='probs_hplus_microstate.cc' object='RNAalihishapes-probs_hplus_microstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-probs_hplus_microstate.o `test -f 'probs_hplus_microstate.cc' || echo '$(srcdir)/'`probs_hplus_microstate.cc

RNAalihishapes-probs_hplus_microstate.obj: probs_hplus_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-probs_hplus_microstate.obj -MD -MP -MF $(DEPDIR)/RNAalihishapes-probs_hplus_microstate.Tpo -c -o RNAalihishapes-probs_hplus_microstate.obj `if test -f 'probs_hplus_microstate.cc'; then $(CYGPATH_W) 'probs_hplus_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_hplus_microstate.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihishapes-probs_hplus_microstate.Tpo $(DEPDIR)/RNAalihishapes-probs_hplus_microstate.Po
#	source='probs_hplus_microstate.cc' object='RNAalihishapes-probs_hplus_microstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-probs_hplus_microstate.obj `if test -f 'probs_hplus_microstate.cc'; then $(CYGPATH_W) 'probs_hplus_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_hplus_microstate.cc'; fi`

RNAalihishapes-probs_m_microstate.o: probs_m_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-probs_m_microstate.o -MD -MP -MF $(DEPDIR)/RNAalihishapes-probs_m_microstate.Tpo -c -o RNAalihishapes-probs_m_microstate.o `test -f 'probs_m_microstate.cc' || echo '$(srcdir)/'`probs_m_microstate.cc
	$(am__mv) $(DEPDIR)/RNAalihishapes-probs_m_microstate.Tpo $(DEPDIR)/RNAalihishapes-probs_m_microstate.Po
#	source='probs_m_microstate.cc' object='RNAalihishapes-probs_m_microstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-probs_m_microstate.o `test -f 'probs_m_microstate.cc' || echo '$(srcdir)/'`probs_m_microstate.cc

RNAalihishapes-probs_m_microstate.obj: probs_m_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-probs_m_microstate.obj -MD -MP -MF $(DEPDIR)/RNAalihishapes-probs_m_microstate.Tpo -c -o RNAalihishapes-probs_m_microstate.obj `if test -f 'probs_m_microstate.cc'; then $(CYGPATH_W) 'probs_m_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_m_microstate.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihishapes-probs_m_microstate.Tpo $(DEPDIR)/RNAalihishapes-probs_m_microstate.Po
#	source='probs_m_microstate.cc' object='RNAalihishapes-probs_m_microstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-probs_m_microstate.obj `if test -f 'probs_m_microstate.cc'; then $(CYGPATH_W) 'probs_m_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_m_microstate.cc'; fi`

RNAalihishapes-probs_a_microstate.o: probs_a_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-probs_a_microstate.o -MD -MP -MF $(DEPDIR)/RNAalihishapes-probs_a_microstate.Tpo -c -o RNAalihishapes-probs_a_microstate.o `test -f 'probs_a_microstate.cc' || echo '$(srcdir)/'`probs_a_microstate.cc
	$(am__mv) $(DEPDIR)/RNAalihishapes-probs_a_microstate.Tpo $(DEPDIR)/RNAalihishapes-probs_a_microstate.Po
#	source='probs_a_microstate.cc' object='RNAalihishapes-probs_a_microstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-probs_a_microstate.o `test -f 'probs_a_microstate.cc' || echo '$(srcdir)/'`probs_a_microstate.cc

RNAalihishapes-probs_a_microstate.obj: probs_a_microstate.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-probs_a_microstate.obj -MD -MP -MF $(DEPDIR)/RNAalihishapes-probs_a_microstate.Tpo -c -o RNAalihishapes-probs_a_microstate.obj `if test -f 'probs_a_microstate.cc'; then $(CYGPATH_W) 'probs_a_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_a_microstate.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihishapes-probs_a_microstate.Tpo $(DEPDIR)/RNAalihishapes-probs_a_microstate.Po
#	source='probs_a_microstate.cc' object='RNAalihishapes-probs_a_microstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-probs_a_microstate.obj `if test -f 'probs_a_microstate.cc'; then $(CYGPATH_W) 'probs_a_microstate.cc'; else $(CYGPATH_W) '$(srcdir)/probs_a_microstate.cc'; fi`

RNAalihishapes-string.o: rtlib/string.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-string.o -MD -MP -MF $(DEPDIR)/RNAalihishapes-string.Tpo -c -o RNAalihishapes-string.o `test -f 'rtlib/string.cc' || echo '$(srcdir)/'`rtlib/string.cc
	$(am__mv) $(DEPDIR)/RNAalihishapes-string.Tpo $(DEPDIR)/RNAalihishapes-string.Po
#	source='rtlib/string.cc' object='RNAalihishapes-string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-string.o `test -f 'rtlib/string.cc' || echo '$(srcdir)/'`rtlib/string.cc

RNAalihishapes-string.obj: rtlib/string.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RNAalihishapes-string.obj -MD -MP -MF $(DEPDIR)/RNAalihishapes-string.Tpo -c -o RNAalihishapes-string.obj `if test -f 'rtlib/string.cc'; then $(CYGPATH_W) 'rtlib/string.cc'; else $(CYGPATH_W) '$(srcdir)/rtlib/string.cc'; fi`
	$(am__mv) $(DEPDIR)/RNAalihishapes-string.Tpo $(DEPDIR)/RNAalihishapes-string.Po
#	source='rtlib/string.cc' object='RNAalihishapes-string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(RNAalihishapes_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RNAalihishapes-string.obj `if test -f 'rtlib/string.cc'; then $(CYGPATH_W) 'rtlib/string.cc'; else $(CYGPATH_W) '$(srcdir)/rtlib/string.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS

#             librna/rnalib.c librna/rnalib.h librna/vienna/config.h \
#             librna/vienna/energy_par.c  librna/vienna/fold_vars.h  librna/vienna/intl21dH.h  librna/vienna/intl22.h    librna/vienna/params.h      librna/vienna/rna_andronescu2007.par  librna/vienna/utils.c \
#             librna/vienna/dna_mathews2004.par  librna/vienna/energy_par.h  librna/vienna/intl11dH.h   librna/vienna/intl21.h    librna/vienna/pair_mat.h  librna/vienna/read_epars.c  librna/vienna/rna_turner1999.par      librna/vienna/utils.h \
#             librna/vienna/data_structures.h  librna/vienna/energy_const.h       librna/vienna/fold_vars.c   librna/vienna/intl11.h     librna/vienna/intl22dH.h  librna/vienna/params.c    librna/vienna/read_epars.h  librna/vienna/rna_turner2004.par \
#                    librna/readme librna/vienna/COPYING

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
